{
  "address": "0xe7dc62b7635282b67C366452fB628109b93535A5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_fundDeployer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_redemptionWindowBuffer",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_redemptionBlockingAdapters",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "adapter",
          "type": "address"
        }
      ],
      "name": "AdapterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "adapter",
          "type": "address"
        }
      ],
      "name": "AdapterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "comptrollerProxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "FundSettingsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevBuffer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nextBuffer",
          "type": "uint256"
        }
      ],
      "name": "RedemptionWindowBufferSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "activateForFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adapter",
          "type": "address"
        }
      ],
      "name": "adapterCanBlockRedemption",
      "outputs": [
        {
          "internalType": "bool",
          "name": "canBlockRedemption_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_encodedSettings",
          "type": "bytes"
        }
      ],
      "name": "addFundSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_adapters",
          "type": "address[]"
        }
      ],
      "name": "addRedemptionBlockingAdapters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTimestamp",
          "type": "uint256"
        }
      ],
      "name": "calcLatestRedemptionWindowStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "latestRedemptionWindowStart_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFundDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "fundDeployer_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPolicyDeployTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPolicyManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "policyManager_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRedemptionWindowBuffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "redemptionWindowBuffer_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        }
      ],
      "name": "getRedemptionWindowForFund",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct GuaranteedRedemption.RedemptionWindow",
          "name": "redemptionWindow_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "string",
          "name": "identifier_",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementedHooks",
      "outputs": [
        {
          "internalType": "enum IPolicyManager.PolicyHook[]",
          "name": "implementedHooks_",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_adapter",
          "type": "address"
        }
      ],
      "name": "passesRule",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_adapters",
          "type": "address[]"
        }
      ],
      "name": "removeRedemptionBlockingAdapters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nextRedemptionWindowBuffer",
          "type": "uint256"
        }
      ],
      "name": "setRedemptionWindowBuffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "updateFundSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum IPolicyManager.PolicyHook",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_encodedArgs",
          "type": "bytes"
        }
      ],
      "name": "validateRule",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid_",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc4ee7e1950223f0f6782d60d91ffa820cf9b2feec007c86ae97a779cf6ca0202",
  "receipt": {
    "to": null,
    "from": "0x5a43993587dD57d58c16bbEbdf23b9F6D279176f",
    "contractAddress": "0xe7dc62b7635282b67C366452fB628109b93535A5",
    "transactionIndex": 111,
    "gasUsed": "1340002",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xf53710b8c5688b7b77a8579899f0436d3714bf4fb167b83bbefee5c3980697ee",
    "transactionHash": "0xc4ee7e1950223f0f6782d60d91ffa820cf9b2feec007c86ae97a779cf6ca0202",
    "logs": [],
    "blockNumber": 13523033,
    "cumulativeGasUsed": "8638232",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x73A064974e0B97c251fDc0c0E627F2518dfAeBEd",
    "0x217912B16c8A00C2D9F2fDFCA94127ca37cFe948",
    300,
    []
  ],
  "linkedData": {
    "type": "POLICY"
  },
  "solcInputHash": "34b1516e615d6cbcdbaf9542624efee9",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fundDeployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_redemptionWindowBuffer\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_redemptionBlockingAdapters\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"}],\"name\":\"AdapterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"}],\"name\":\"AdapterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"FundSettingsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevBuffer\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextBuffer\",\"type\":\"uint256\"}],\"name\":\"RedemptionWindowBufferSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adapter\",\"type\":\"address\"}],\"name\":\"adapterCanBlockRedemption\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canBlockRedemption_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_encodedSettings\",\"type\":\"bytes\"}],\"name\":\"addFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_adapters\",\"type\":\"address[]\"}],\"name\":\"addRedemptionBlockingAdapters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTimestamp\",\"type\":\"uint256\"}],\"name\":\"calcLatestRedemptionWindowStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"latestRedemptionWindowStart_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fundDeployer_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPolicyDeployTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPolicyManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"policyManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRedemptionWindowBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"redemptionWindowBuffer_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getRedemptionWindowForFund\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct GuaranteedRedemption.RedemptionWindow\",\"name\":\"redemptionWindow_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"identifier_\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementedHooks\",\"outputs\":[{\"internalType\":\"enum IPolicyManager.PolicyHook[]\",\"name\":\"implementedHooks_\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adapter\",\"type\":\"address\"}],\"name\":\"passesRule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_adapters\",\"type\":\"address[]\"}],\"name\":\"removeRedemptionBlockingAdapters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nextRedemptionWindowBuffer\",\"type\":\"uint256\"}],\"name\":\"setRedemptionWindowBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"updateFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IPolicyManager.PolicyHook\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_encodedArgs\",\"type\":\"bytes\"}],\"name\":\"validateRule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"activateForFund(address,address)\":{\"details\":\"Unimplemented by default, can be overridden by the policy\"},\"adapterCanBlockRedemption(address)\":{\"params\":{\"_adapter\":\"The address of the adapter to check\"},\"returns\":{\"canBlockRedemption_\":\"True if the adapter can block shares redemption\"}},\"addFundSettings(address,bytes)\":{\"params\":{\"_comptrollerProxy\":\"The fund's ComptrollerProxy address\",\"_encodedSettings\":\"Encoded settings to apply to a fund\"}},\"addRedemptionBlockingAdapters(address[])\":{\"params\":{\"_adapters\":\"The addresses of adapters to be added\"}},\"calcLatestRedemptionWindowStart(uint256)\":{\"params\":{\"_startTimestamp\":\"The initial startTimestamp for the redemption window\"},\"returns\":{\"latestRedemptionWindowStart_\":\"The starting timestamp of the most recent redemption window\"}},\"getFundDeployer()\":{\"returns\":{\"fundDeployer_\":\"The `FUND_DEPLOYER` variable value\"}},\"getOwner()\":{\"details\":\"Ownership is deferred to the owner of the FundDeployer contract\",\"returns\":{\"owner_\":\"The owner\"}},\"getPolicyManager()\":{\"returns\":{\"policyManager_\":\"The `POLICY_MANAGER` variable value\"}},\"getRedemptionWindowBuffer()\":{\"returns\":{\"redemptionWindowBuffer_\":\"The `redemptionWindowBuffer` variable value\"}},\"getRedemptionWindowForFund(address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\"},\"returns\":{\"redemptionWindow_\":\"The RedemptionWindow settings\"}},\"identifier()\":{\"returns\":{\"identifier_\":\"The identifer string\"}},\"implementedHooks()\":{\"returns\":{\"implementedHooks_\":\"The implemented PolicyHooks\"}},\"passesRule(address,address)\":{\"params\":{\"_adapter\":\"The adapter for which to check the rule\",\"_comptrollerProxy\":\"The fund's ComptrollerProxy address\"},\"returns\":{\"isValid_\":\"True if the rule passes\"}},\"removeRedemptionBlockingAdapters(address[])\":{\"params\":{\"_adapters\":\"The addresses of adapters to be removed\"}},\"setRedemptionWindowBuffer(uint256)\":{\"details\":\"The redemptionWindowBuffer is added to the beginning of the redemption window, and should always be >= the longest potential block on redemption amongst all adapters. (e.g., Synthetix blocks token transfers during a timelock after trading synths)\",\"params\":{\"_nextRedemptionWindowBuffer\":\"The number of seconds for the redemptionWindowBuffer\"}},\"updateFundSettings(address,address,bytes)\":{\"details\":\"Disallowed by default, can be overridden by the policy\"},\"validateRule(address,address,uint8,bytes)\":{\"params\":{\"_comptrollerProxy\":\"The fund's ComptrollerProxy address\",\"_encodedArgs\":\"Encoded args with which to validate the rule\"},\"returns\":{\"isValid_\":\"True if the rule passes\"}}},\"title\":\"GuaranteedRedemption Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateForFund(address,address)\":{\"notice\":\"Validates and initializes a policy as necessary prior to fund activation\"},\"adapterCanBlockRedemption(address)\":{\"notice\":\"Checks whether an adapter can block shares redemption\"},\"addFundSettings(address,bytes)\":{\"notice\":\"Add the initial policy settings for a fund\"},\"addRedemptionBlockingAdapters(address[])\":{\"notice\":\"Add adapters which can block shares redemption\"},\"calcLatestRedemptionWindowStart(uint256)\":{\"notice\":\"Calculates the start of the most recent redemption window\"},\"getFundDeployer()\":{\"notice\":\"Gets the `FUND_DEPLOYER` variable\"},\"getOwner()\":{\"notice\":\"Gets the owner of this contract\"},\"getPolicyManager()\":{\"notice\":\"Gets the `POLICY_MANAGER` variable value\"},\"getRedemptionWindowBuffer()\":{\"notice\":\"Gets the `redemptionWindowBuffer` variable\"},\"getRedemptionWindowForFund(address)\":{\"notice\":\"Gets the RedemptionWindow settings for a given fund\"},\"identifier()\":{\"notice\":\"Provides a constant string identifier for a policy\"},\"implementedHooks()\":{\"notice\":\"Gets the implemented PolicyHooks for a policy\"},\"passesRule(address,address)\":{\"notice\":\"Checks whether a particular condition passes the rule for a particular fund\"},\"removeRedemptionBlockingAdapters(address[])\":{\"notice\":\"Remove adapters which can block shares redemption\"},\"setRedemptionWindowBuffer(uint256)\":{\"notice\":\"Sets a new value for the redemptionWindowBuffer variable\"},\"updateFundSettings(address,address,bytes)\":{\"notice\":\"Updates the policy settings for a fund\"},\"validateRule(address,address,uint8,bytes)\":{\"notice\":\"Apply the rule with the specified parameters of a PolicyHook\"}},\"notice\":\"A policy that guarantees that shares will either be continuously redeemable or redeemable within a predictable daily window by preventing trading during a configurable daily period\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/policy-manager/policies/call-on-integration/GuaranteedRedemption.sol\":\"GuaranteedRedemption\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"contracts/release/core/fund-deployer/IFundDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IFundDeployer Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IFundDeployer {\\n    enum ReleaseStatus {PreLaunch, Live, Paused}\\n\\n    function getOwner() external view returns (address);\\n\\n    function getBuybackVault() external view returns (address);\\n\\n    function getReleaseStatus() external view returns (ReleaseStatus);\\n\\n    function isRegisteredVaultCall(address, bytes4) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe5d28ccc67b68ed61a36eac1e3dfda4230b3669c71e2169ec190ec243bd78742\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/policy-manager/IPolicy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IPolicyManager.sol\\\";\\n\\n/// @title Policy Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IPolicy {\\n    function activateForFund(address _comptrollerProxy, address _vaultProxy) external;\\n\\n    function addFundSettings(address _comptrollerProxy, bytes calldata _encodedSettings) external;\\n\\n    function identifier() external pure returns (string memory identifier_);\\n\\n    function implementedHooks()\\n        external\\n        view\\n        returns (IPolicyManager.PolicyHook[] memory implementedHooks_);\\n\\n    function updateFundSettings(\\n        address _comptrollerProxy,\\n        address _vaultProxy,\\n        bytes calldata _encodedSettings\\n    ) external;\\n\\n    function validateRule(\\n        address _comptrollerProxy,\\n        address _vaultProxy,\\n        IPolicyManager.PolicyHook _hook,\\n        bytes calldata _encodedArgs\\n    ) external returns (bool isValid_);\\n}\\n\",\"keccak256\":\"0x0e2e8a653f8c136c50e9b8642bd57744fe581d005e1ee787476a86f3ef40551f\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/policy-manager/IPolicyManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\n/// @title PolicyManager Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Interface for the PolicyManager\\ninterface IPolicyManager {\\n    enum PolicyHook {\\n        BuySharesSetup,\\n        PreBuyShares,\\n        PostBuyShares,\\n        BuySharesCompleted,\\n        PreCallOnIntegration,\\n        PostCallOnIntegration\\n    }\\n\\n    function validatePolicies(\\n        address,\\n        PolicyHook,\\n        bytes calldata\\n    ) external;\\n}\\n\",\"keccak256\":\"0xedf25295ad42998e2651b3828c2be4a6aeef1176e0c669781074394e3d181732\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/policy-manager/policies/call-on-integration/GuaranteedRedemption.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"../../../utils/FundDeployerOwnerMixin.sol\\\";\\nimport \\\"./utils/PreCallOnIntegrationValidatePolicyBase.sol\\\";\\n\\n/// @title GuaranteedRedemption Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A policy that guarantees that shares will either be continuously redeemable or\\n/// redeemable within a predictable daily window by preventing trading during a configurable daily period\\ncontract GuaranteedRedemption is PreCallOnIntegrationValidatePolicyBase, FundDeployerOwnerMixin {\\n    using SafeMath for uint256;\\n\\n    event AdapterAdded(address adapter);\\n\\n    event AdapterRemoved(address adapter);\\n\\n    event FundSettingsSet(\\n        address indexed comptrollerProxy,\\n        uint256 startTimestamp,\\n        uint256 duration\\n    );\\n\\n    event RedemptionWindowBufferSet(uint256 prevBuffer, uint256 nextBuffer);\\n\\n    struct RedemptionWindow {\\n        uint256 startTimestamp;\\n        uint256 duration;\\n    }\\n\\n    uint256 private constant ONE_DAY = 24 * 60 * 60;\\n\\n    mapping(address => bool) private adapterToCanBlockRedemption;\\n    mapping(address => RedemptionWindow) private comptrollerProxyToRedemptionWindow;\\n    uint256 private redemptionWindowBuffer;\\n\\n    constructor(\\n        address _policyManager,\\n        address _fundDeployer,\\n        uint256 _redemptionWindowBuffer,\\n        address[] memory _redemptionBlockingAdapters\\n    ) public PolicyBase(_policyManager) FundDeployerOwnerMixin(_fundDeployer) {\\n        redemptionWindowBuffer = _redemptionWindowBuffer;\\n\\n        __addRedemptionBlockingAdapters(_redemptionBlockingAdapters);\\n    }\\n\\n    // EXTERNAL FUNCTIONS\\n\\n    /// @notice Add the initial policy settings for a fund\\n    /// @param _comptrollerProxy The fund's ComptrollerProxy address\\n    /// @param _encodedSettings Encoded settings to apply to a fund\\n    function addFundSettings(address _comptrollerProxy, bytes calldata _encodedSettings)\\n        external\\n        override\\n        onlyPolicyManager\\n    {\\n        (uint256 startTimestamp, uint256 duration) = abi.decode(\\n            _encodedSettings,\\n            (uint256, uint256)\\n        );\\n\\n        if (startTimestamp == 0) {\\n            require(duration == 0, \\\"addFundSettings: duration must be 0 if startTimestamp is 0\\\");\\n            return;\\n        }\\n\\n        // Use 23 hours instead of 1 day to allow up to 1 hr of redemptionWindowBuffer\\n        require(\\n            duration > 0 && duration <= 23 hours,\\n            \\\"addFundSettings: duration must be between 1 second and 23 hours\\\"\\n        );\\n\\n        comptrollerProxyToRedemptionWindow[_comptrollerProxy].startTimestamp = startTimestamp;\\n        comptrollerProxyToRedemptionWindow[_comptrollerProxy].duration = duration;\\n\\n        emit FundSettingsSet(_comptrollerProxy, startTimestamp, duration);\\n    }\\n\\n    /// @notice Provides a constant string identifier for a policy\\n    /// @return identifier_ The identifer string\\n    function identifier() external pure override returns (string memory identifier_) {\\n        return \\\"GUARANTEED_REDEMPTION\\\";\\n    }\\n\\n    /// @notice Checks whether a particular condition passes the rule for a particular fund\\n    /// @param _comptrollerProxy The fund's ComptrollerProxy address\\n    /// @param _adapter The adapter for which to check the rule\\n    /// @return isValid_ True if the rule passes\\n    function passesRule(address _comptrollerProxy, address _adapter)\\n        public\\n        view\\n        returns (bool isValid_)\\n    {\\n        if (!adapterCanBlockRedemption(_adapter)) {\\n            return true;\\n        }\\n\\n\\n            RedemptionWindow memory redemptionWindow\\n         = comptrollerProxyToRedemptionWindow[_comptrollerProxy];\\n\\n        // If no RedemptionWindow is set, the fund can never use redemption-blocking adapters\\n        if (redemptionWindow.startTimestamp == 0) {\\n            return false;\\n        }\\n\\n        uint256 latestRedemptionWindowStart = calcLatestRedemptionWindowStart(\\n            redemptionWindow.startTimestamp\\n        );\\n\\n        // A fund can't trade during its redemption window, nor in the buffer beforehand.\\n        // The lower bound is only relevant when the startTimestamp is in the future,\\n        // so we check it last.\\n        if (\\n            block.timestamp >= latestRedemptionWindowStart.add(redemptionWindow.duration) ||\\n            block.timestamp <= latestRedemptionWindowStart.sub(redemptionWindowBuffer)\\n        ) {\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n\\n    /// @notice Sets a new value for the redemptionWindowBuffer variable\\n    /// @param _nextRedemptionWindowBuffer The number of seconds for the redemptionWindowBuffer\\n    /// @dev The redemptionWindowBuffer is added to the beginning of the redemption window,\\n    /// and should always be >= the longest potential block on redemption amongst all adapters.\\n    /// (e.g., Synthetix blocks token transfers during a timelock after trading synths)\\n    function setRedemptionWindowBuffer(uint256 _nextRedemptionWindowBuffer)\\n        external\\n        onlyFundDeployerOwner\\n    {\\n        uint256 prevRedemptionWindowBuffer = redemptionWindowBuffer;\\n        require(\\n            _nextRedemptionWindowBuffer != prevRedemptionWindowBuffer,\\n            \\\"setRedemptionWindowBuffer: Value already set\\\"\\n        );\\n\\n        redemptionWindowBuffer = _nextRedemptionWindowBuffer;\\n\\n        emit RedemptionWindowBufferSet(prevRedemptionWindowBuffer, _nextRedemptionWindowBuffer);\\n    }\\n\\n    /// @notice Apply the rule with the specified parameters of a PolicyHook\\n    /// @param _comptrollerProxy The fund's ComptrollerProxy address\\n    /// @param _encodedArgs Encoded args with which to validate the rule\\n    /// @return isValid_ True if the rule passes\\n    function validateRule(\\n        address _comptrollerProxy,\\n        address,\\n        IPolicyManager.PolicyHook,\\n        bytes calldata _encodedArgs\\n    ) external override returns (bool isValid_) {\\n        (address adapter, ) = __decodeRuleArgs(_encodedArgs);\\n\\n        return passesRule(_comptrollerProxy, adapter);\\n    }\\n\\n    // PUBLIC FUNCTIONS\\n\\n    /// @notice Calculates the start of the most recent redemption window\\n    /// @param _startTimestamp The initial startTimestamp for the redemption window\\n    /// @return latestRedemptionWindowStart_ The starting timestamp of the most recent redemption window\\n    function calcLatestRedemptionWindowStart(uint256 _startTimestamp)\\n        public\\n        view\\n        returns (uint256 latestRedemptionWindowStart_)\\n    {\\n        if (block.timestamp <= _startTimestamp) {\\n            return _startTimestamp;\\n        }\\n\\n        uint256 timeSinceStartTimestamp = block.timestamp.sub(_startTimestamp);\\n        uint256 timeSincePeriodStart = timeSinceStartTimestamp.mod(ONE_DAY);\\n\\n        return block.timestamp.sub(timeSincePeriodStart);\\n    }\\n\\n    ///////////////////////////////////////////\\n    // REDEMPTION-BLOCKING ADAPTERS REGISTRY //\\n    ///////////////////////////////////////////\\n\\n    /// @notice Add adapters which can block shares redemption\\n    /// @param _adapters The addresses of adapters to be added\\n    function addRedemptionBlockingAdapters(address[] calldata _adapters)\\n        external\\n        onlyFundDeployerOwner\\n    {\\n        require(\\n            _adapters.length > 0,\\n            \\\"__addRedemptionBlockingAdapters: _adapters cannot be empty\\\"\\n        );\\n\\n        __addRedemptionBlockingAdapters(_adapters);\\n    }\\n\\n    /// @notice Remove adapters which can block shares redemption\\n    /// @param _adapters The addresses of adapters to be removed\\n    function removeRedemptionBlockingAdapters(address[] calldata _adapters)\\n        external\\n        onlyFundDeployerOwner\\n    {\\n        require(\\n            _adapters.length > 0,\\n            \\\"removeRedemptionBlockingAdapters: _adapters cannot be empty\\\"\\n        );\\n\\n        for (uint256 i; i < _adapters.length; i++) {\\n            require(\\n                adapterCanBlockRedemption(_adapters[i]),\\n                \\\"removeRedemptionBlockingAdapters: adapter is not added\\\"\\n            );\\n\\n            adapterToCanBlockRedemption[_adapters[i]] = false;\\n\\n            emit AdapterRemoved(_adapters[i]);\\n        }\\n    }\\n\\n    /// @dev Helper to mark adapters that can block shares redemption\\n    function __addRedemptionBlockingAdapters(address[] memory _adapters) private {\\n        for (uint256 i; i < _adapters.length; i++) {\\n            require(\\n                _adapters[i] != address(0),\\n                \\\"__addRedemptionBlockingAdapters: adapter cannot be empty\\\"\\n            );\\n            require(\\n                !adapterCanBlockRedemption(_adapters[i]),\\n                \\\"__addRedemptionBlockingAdapters: adapter already added\\\"\\n            );\\n\\n            adapterToCanBlockRedemption[_adapters[i]] = true;\\n\\n            emit AdapterAdded(_adapters[i]);\\n        }\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    /// @notice Gets the `redemptionWindowBuffer` variable\\n    /// @return redemptionWindowBuffer_ The `redemptionWindowBuffer` variable value\\n    function getRedemptionWindowBuffer() external view returns (uint256 redemptionWindowBuffer_) {\\n        return redemptionWindowBuffer;\\n    }\\n\\n    /// @notice Gets the RedemptionWindow settings for a given fund\\n    /// @param _comptrollerProxy The ComptrollerProxy of the fund\\n    /// @return redemptionWindow_ The RedemptionWindow settings\\n    function getRedemptionWindowForFund(address _comptrollerProxy)\\n        external\\n        view\\n        returns (RedemptionWindow memory redemptionWindow_)\\n    {\\n        return comptrollerProxyToRedemptionWindow[_comptrollerProxy];\\n    }\\n\\n    /// @notice Checks whether an adapter can block shares redemption\\n    /// @param _adapter The address of the adapter to check\\n    /// @return canBlockRedemption_ True if the adapter can block shares redemption\\n    function adapterCanBlockRedemption(address _adapter)\\n        public\\n        view\\n        returns (bool canBlockRedemption_)\\n    {\\n        return adapterToCanBlockRedemption[_adapter];\\n    }\\n}\\n\",\"keccak256\":\"0x63ab6533241eed32fa521a219d3d38abae6ffbe792fff5f11864393a0ae65c2a\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/policy-manager/policies/call-on-integration/utils/PreCallOnIntegrationValidatePolicyBase.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../../utils/PolicyBase.sol\\\";\\n\\n/// @title CallOnIntegrationPreValidatePolicyMixin Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A mixin contract for policies that only implement the PreCallOnIntegration policy hook\\nabstract contract PreCallOnIntegrationValidatePolicyBase is PolicyBase {\\n    /// @notice Gets the implemented PolicyHooks for a policy\\n    /// @return implementedHooks_ The implemented PolicyHooks\\n    function implementedHooks()\\n        external\\n        view\\n        override\\n        returns (IPolicyManager.PolicyHook[] memory implementedHooks_)\\n    {\\n        implementedHooks_ = new IPolicyManager.PolicyHook[](1);\\n        implementedHooks_[0] = IPolicyManager.PolicyHook.PreCallOnIntegration;\\n\\n        return implementedHooks_;\\n    }\\n\\n    /// @notice Helper to decode rule arguments\\n    function __decodeRuleArgs(bytes memory _encodedRuleArgs)\\n        internal\\n        pure\\n        returns (address adapter_, bytes4 selector_)\\n    {\\n        return abi.decode(_encodedRuleArgs, (address, bytes4));\\n    }\\n}\\n\",\"keccak256\":\"0x1c8752e375641e37c881143da6614ab007b3c96a38463d47f530b50f2bc5d333\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/policy-manager/policies/utils/PolicyBase.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../../IPolicy.sol\\\";\\n\\n/// @title PolicyBase Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Abstract base contract for all policies\\nabstract contract PolicyBase is IPolicy {\\n    address internal immutable POLICY_MANAGER;\\n    uint256 internal immutable POLICY_DEPLOY_TIMESTAMP;\\n\\n    modifier onlyPolicyManager {\\n        require(msg.sender == POLICY_MANAGER, \\\"Only the PolicyManager can make this call\\\");\\n        _;\\n    }\\n\\n    constructor(address _policyManager) public {\\n        POLICY_MANAGER = _policyManager;\\n        POLICY_DEPLOY_TIMESTAMP = block.timestamp;\\n    }\\n\\n    /// @notice Validates and initializes a policy as necessary prior to fund activation\\n    /// @dev Unimplemented by default, can be overridden by the policy\\n    function activateForFund(address, address) external virtual override {\\n        return;\\n    }\\n\\n    /// @notice Updates the policy settings for a fund\\n    /// @dev Disallowed by default, can be overridden by the policy\\n    function updateFundSettings(\\n        address,\\n        address,\\n        bytes calldata\\n    ) external virtual override {\\n        revert(\\\"updateFundSettings: Updates not allowed for this policy\\\");\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    /// @notice Gets the `POLICY_MANAGER` variable value\\n    /// @return policyManager_ The `POLICY_MANAGER` variable value\\n    function getPolicyManager() external view returns (address policyManager_) {\\n        return POLICY_MANAGER;\\n    }\\n\\n    function getPolicyDeployTimestamp() external view returns (uint256) {\\n        return POLICY_DEPLOY_TIMESTAMP;\\n    }\\n}\\n\",\"keccak256\":\"0xf6d1a74f414e334ef7dd01cb92bf352e77ea74b1bd4868033b973fa322cb42f5\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/utils/FundDeployerOwnerMixin.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../../core/fund-deployer/IFundDeployer.sol\\\";\\n\\n/// @title FundDeployerOwnerMixin Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A mixin contract that defers ownership to the owner of FundDeployer\\nabstract contract FundDeployerOwnerMixin {\\n    address internal immutable FUND_DEPLOYER;\\n\\n    modifier onlyFundDeployerOwner() {\\n        require(\\n            msg.sender == getOwner(),\\n            \\\"onlyFundDeployerOwner: Only the FundDeployer owner can call this function\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor(address _fundDeployer) public {\\n        FUND_DEPLOYER = _fundDeployer;\\n    }\\n\\n    /// @notice Gets the owner of this contract\\n    /// @return owner_ The owner\\n    /// @dev Ownership is deferred to the owner of the FundDeployer contract\\n    function getOwner() public view returns (address owner_) {\\n        return IFundDeployer(FUND_DEPLOYER).getOwner();\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    /// @notice Gets the `FUND_DEPLOYER` variable\\n    /// @return fundDeployer_ The `FUND_DEPLOYER` variable value\\n    function getFundDeployer() external view returns (address fundDeployer_) {\\n        return FUND_DEPLOYER;\\n    }\\n}\\n\",\"keccak256\":\"0xae16a22807bc31d46654889122b8db7ee55b731efc8d6feb4c978d13fee3336d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162001b5f38038062001b5f833981016040819052620000349162000283565b6001600160601b0319606085811b82166080524260a05284901b1660c052600282905562000062816200006c565b5050505062000475565b60005b8151811015620001b85760006001600160a01b03168282815181106200009157fe5b60200260200101516001600160a01b03161415620000cc5760405162461bcd60e51b8152600401620000c390620003c6565b60405180910390fd5b620000f1828281518110620000dd57fe5b6020026020010151620001bc60201b60201c565b15620001115760405162461bcd60e51b8152600401620000c390620003d8565b60016000808484815181106200012357fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcf9c2c7f9adbb156bd76affb04df84595f8f5e69cab2e61221b05b05a902fa268282815181106200019057fe5b6020026020010151604051620001a79190620003b6565b60405180910390a16001016200006f565b5050565b6001600160a01b031660009081526020819052604090205460ff1690565b8051620001e78162000450565b92915050565b600082601f830112620001ff57600080fd5b815162000216620002108262000411565b620003ea565b915081818352602084019350602081019050838560208402820111156200023c57600080fd5b60005b838110156200026c5781620002558882620001da565b84525060209283019291909101906001016200023f565b5050505092915050565b8051620001e7816200046a565b600080600080608085870312156200029a57600080fd5b6000620002a88787620001da565b9450506020620002bb87828801620001da565b9350506040620002ce8782880162000276565b92505060608501516001600160401b03811115620002eb57600080fd5b620002f987828801620001ed565b91505092959194509250565b62000310816200043b565b82525050565b60006200032560388362000432565b60008051602062001b3f83398151915281527f20616461707465722063616e6e6f7420626520656d7074790000000000000000602082015260400192915050565b60006200037560368362000432565b60008051602062001b3f83398151915281527f206164617074657220616c726561647920616464656400000000000000000000602082015260400192915050565b60208101620001e7828462000305565b60208082528101620001e78162000316565b60208082528101620001e78162000366565b6040518181016001600160401b03811182821017156200040957600080fd5b604052919050565b60006001600160401b038211156200042857600080fd5b5060209081020190565b90815260200190565b60006001600160a01b038216620001e7565b90565b6200045b816200043b565b81146200046757600080fd5b50565b6200045b816200044d565b60805160601c60a05160c05160601c61168d620004b2600039806104b952806105a85250806103a3525080610288528061082e525061168d6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638945f190116100a2578063b67cb40c11610071578063b67cb40c14610227578063cbf54bb21461023a578063d44ad6cb1461024f578063e0b9ae4014610257578063ef877c0f1461026a57610116565b80638945f190146101e65780638e05b36a146101f957806397c0ac871461020c5780639c2f61d61461021457610116565b80635b8f1c5a116100e95780635b8f1c5a14610169578063710304531461018957806374dc6b4b1461019c5780637998a1c4146101bc578063893d20e8146101d157610116565b80630f5f6b4f1461011b57806310587e95146101305780632057e3b61461014e5780633146d05814610156575b600080fd5b61012e610129366004610dba565b61027d565b005b6101386103a1565b6040516101459190611564565b60405180910390f35b6101386103c5565b61012e610164366004610ca4565b6103cb565b61017c610177366004610d3c565b6103cf565b6040516101459190611457565b61017c610197366004610c2e565b610429565b6101af6101aa366004610c2e565b61044b565b6040516101459190611556565b6101c4610486565b6040516101459190611465565b6101d96104b5565b6040516101459190611438565b61012e6101f4366004610cd4565b61054d565b610138610207366004610e52565b610565565b6101d96105a6565b61012e610222366004610e10565b6105ca565b61017c610235366004610ca4565b610717565b6102426107d5565b6040516101459190611446565b6101d961082c565b61012e610265366004610e52565b610850565b61012e610278366004610e10565b6108ee565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102ce5760405162461bcd60e51b81526004016102c5906114e6565b60405180910390fd5b6000806102dd83850185610e70565b91509150816000141561030f5780156103085760405162461bcd60e51b81526004016102c5906114b6565b505061039c565b6000811180156103225750620143708111155b61033e5760405162461bcd60e51b81526004016102c590611546565b6001600160a01b03851660008181526001602081905260409182902085815501839055517fed112d6c0e84b6900209ce5a4c04541bc63a517e0160888c447ee70be47ce60f906103919085908590611572565b60405180910390a250505b505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60025490565b5050565b60008061041184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061097f92505050565b50905061041e8782610717565b979650505050505050565b6001600160a01b03811660009081526020819052604090205460ff165b919050565b610453610b52565b506001600160a01b0316600090815260016020818152604092839020835180850190945280548452909101549082015290565b60408051808201909152601581527423aaa0a920a72a22a2a22fa922a222a6a82a24a7a760591b602082015290565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561051057600080fd5b505afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190610c4c565b905090565b60405162461bcd60e51b81526004016102c5906114a6565b6000814211610575575080610446565b6000610581428461099f565b9050600061059282620151806109c7565b905061059e428261099f565b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6105d26104b5565b6001600160a01b0316336001600160a01b0316146106025760405162461bcd60e51b81526004016102c590611486565b8061061f5760405162461bcd60e51b81526004016102c590611526565b60005b8181101561039c5761064e83838381811061063957fe5b90506020020160208101906101979190610c2e565b61066a5760405162461bcd60e51b81526004016102c590611506565b600080600085858581811061067b57fe5b90506020020160208101906106909190610c2e565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557fdf980d21d8c7bb34800e668dbe003299093bac8e693614151d3c57f73f98a93d8383838181106106e557fe5b90506020020160208101906106fa9190610c2e565b6040516107079190611438565b60405180910390a1600101610622565b600061072282610429565b61072e575060016107cf565b610736610b52565b506001600160a01b03831660009081526001602081815260409283902083518085019094528054808552920154908301526107755760009150506107cf565b60006107848260000151610565565b905061079d8260200151826109f990919063ffffffff16565b421015806107b857506002546107b490829061099f565b4211155b156107c8576001925050506107cf565b6000925050505b92915050565b6040805160018082528183019092526060916020808301908036833701905050905060048160008151811061080657fe5b6020026020010190600581111561081957fe5b9081600581111561082657fe5b90525090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6108586104b5565b6001600160a01b0316336001600160a01b0316146108885760405162461bcd60e51b81526004016102c590611486565b600254818114156108ab5760405162461bcd60e51b81526004016102c590611536565b60028290556040517f72325148df4fbe9f28de10305dd97d6bf5531327e3db352c17dd75f123a90751906108e29083908590611572565b60405180910390a15050565b6108f66104b5565b6001600160a01b0316336001600160a01b0316146109265760405162461bcd60e51b81526004016102c590611486565b806109435760405162461bcd60e51b81526004016102c5906114f6565b6103cb828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610a2592505050565b600080828060200190518101906109969190610c6a565b91509150915091565b6000828211156109c15760405162461bcd60e51b81526004016102c5906114c6565b50900390565b60008082116109e85760405162461bcd60e51b81526004016102c5906114d6565b8183816109f157fe5b069392505050565b600082820183811015610a1e5760405162461bcd60e51b81526004016102c590611496565b9392505050565b60005b81518110156103cb5760006001600160a01b0316828281518110610a4857fe5b60200260200101516001600160a01b03161415610a775760405162461bcd60e51b81526004016102c590611476565b610a93828281518110610a8657fe5b6020026020010151610429565b15610ab05760405162461bcd60e51b81526004016102c590611516565b6001600080848481518110610ac157fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcf9c2c7f9adbb156bd76affb04df84595f8f5e69cab2e61221b05b05a902fa26828281518110610b2d57fe5b6020026020010151604051610b429190611438565b60405180910390a1600101610a28565b604051806040016040528060008152602001600081525090565b80356107cf81611624565b80516107cf81611624565b60008083601f840112610b9457600080fd5b50813567ffffffffffffffff811115610bac57600080fd5b602083019150836020820283011115610bc457600080fd5b9250929050565b80516107cf81611638565b60008083601f840112610be857600080fd5b50813567ffffffffffffffff811115610c0057600080fd5b602083019150836001820283011115610bc457600080fd5b80356107cf81611641565b80356107cf8161164e565b600060208284031215610c4057600080fd5b600061059e8484610b6c565b600060208284031215610c5e57600080fd5b600061059e8484610b77565b60008060408385031215610c7d57600080fd5b6000610c898585610b77565b9250506020610c9a85828601610bcb565b9150509250929050565b60008060408385031215610cb757600080fd5b6000610cc38585610b6c565b9250506020610c9a85828601610b6c565b60008060008060608587031215610cea57600080fd5b6000610cf68787610b6c565b9450506020610d0787828801610b6c565b935050604085013567ffffffffffffffff811115610d2457600080fd5b610d3087828801610bd6565b95989497509550505050565b600080600080600060808688031215610d5457600080fd5b6000610d608888610b6c565b9550506020610d7188828901610b6c565b9450506040610d8288828901610c18565b935050606086013567ffffffffffffffff811115610d9f57600080fd5b610dab88828901610bd6565b92509250509295509295909350565b600080600060408486031215610dcf57600080fd5b6000610ddb8686610b6c565b935050602084013567ffffffffffffffff811115610df857600080fd5b610e0486828701610bd6565b92509250509250925092565b60008060208385031215610e2357600080fd5b823567ffffffffffffffff811115610e3a57600080fd5b610e4685828601610b82565b92509250509250929050565b600060208284031215610e6457600080fd5b600061059e8484610c23565b60008060408385031215610e8357600080fd5b6000610e8f8585610c23565b9250506020610c9a85828601610c23565b6000610eac8383610f25565b505060200190565b610ebd816115a0565b82525050565b6000610ece82611593565b610ed88185611597565b9350610ee38361158d565b8060005b83811015610f11578151610efb8882610ea0565b9750610f068361158d565b925050600101610ee7565b509495945050505050565b610ebd816115ab565b610ebd816115d6565b6000610f3982611593565b610f438185611597565b9350610f538185602086016115e1565b610f5c8161160d565b9093019392505050565b6000610f73603883611597565b7f5f5f616464526564656d7074696f6e426c6f636b696e6741646170746572733a81527f20616461707465722063616e6e6f7420626520656d7074790000000000000000602082015260400192915050565b6000610fd2604983611597565b7f6f6e6c7946756e644465706c6f7965724f776e65723a204f6e6c79207468652081527f46756e644465706c6f796572206f776e65722063616e2063616c6c207468697360208201526810333ab731ba34b7b760b91b604082015260600192915050565b6000611043601b83611597565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b600061107c603783611597565b7f75706461746546756e6453657474696e67733a2055706461746573206e6f742081527f616c6c6f77656420666f72207468697320706f6c696379000000000000000000602082015260400192915050565b60006110db603a83611597565b7f61646446756e6453657474696e67733a206475726174696f6e206d757374206281527f65203020696620737461727454696d657374616d702069732030000000000000602082015260400192915050565b600061113a601e83611597565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815260200192915050565b6000611173601883611597565b7f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815260200192915050565b60006111ac602983611597565b7f4f6e6c792074686520506f6c6963794d616e616765722063616e206d616b65208152681d1a1a5cc818d85b1b60ba1b602082015260400192915050565b60006111f7603a83611597565b7f5f5f616464526564656d7074696f6e426c6f636b696e6741646170746572733a81527f205f61646170746572732063616e6e6f7420626520656d707479000000000000602082015260400192915050565b6000611256603683611597565b7f72656d6f7665526564656d7074696f6e426c6f636b696e6741646170746572738152750e881859185c1d195c881a5cc81b9bdd08185919195960521b602082015260400192915050565b60006112ae603683611597565b7f5f5f616464526564656d7074696f6e426c6f636b696e6741646170746572733a815275081859185c1d195c88185b1c9958591e48185919195960521b602082015260400192915050565b6000611306603b83611597565b7f72656d6f7665526564656d7074696f6e426c6f636b696e67416461707465727381527f3a205f61646170746572732063616e6e6f7420626520656d7074790000000000602082015260400192915050565b6000611365602c83611597565b7f736574526564656d7074696f6e57696e646f774275666665723a2056616c756581526b08185b1c9958591e481cd95d60a21b602082015260400192915050565b60006113b3603f83611597565b7f61646446756e6453657474696e67733a206475726174696f6e206d757374206281527f65206265747765656e2031207365636f6e6420616e6420323320686f75727300602082015260400192915050565b80516040830190611416848261142f565b506020820151611429602085018261142f565b50505050565b610ebd816115d3565b602081016107cf8284610eb4565b60208082528101610a1e8184610ec3565b602081016107cf8284610f1c565b60208082528101610a1e8184610f2e565b602080825281016107cf81610f66565b602080825281016107cf81610fc5565b602080825281016107cf81611036565b602080825281016107cf8161106f565b602080825281016107cf816110ce565b602080825281016107cf8161112d565b602080825281016107cf81611166565b602080825281016107cf8161119f565b602080825281016107cf816111ea565b602080825281016107cf81611249565b602080825281016107cf816112a1565b602080825281016107cf816112f9565b602080825281016107cf81611358565b602080825281016107cf816113a6565b604081016107cf8284611405565b602081016107cf828461142f565b60408101611580828561142f565b610a1e602083018461142f565b60200190565b5190565b90815260200190565b60006107cf826115c7565b151590565b6001600160e01b03191690565b8061044681611617565b6001600160a01b031690565b90565b60006107cf826115bd565b60005b838110156115fc5781810151838201526020016115e4565b838111156114295750506000910152565b601f01601f191690565b6006811061162157fe5b50565b61162d816115a0565b811461162157600080fd5b61162d816115b0565b6006811061162157600080fd5b61162d816115d356fea26469706673582212207faa344f4fa4cc4d841f813a9f0f67e99073fc451e7e2b00a4a461225a22450464736f6c634300060c00335f5f616464526564656d7074696f6e426c6f636b696e6741646170746572733a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638945f190116100a2578063b67cb40c11610071578063b67cb40c14610227578063cbf54bb21461023a578063d44ad6cb1461024f578063e0b9ae4014610257578063ef877c0f1461026a57610116565b80638945f190146101e65780638e05b36a146101f957806397c0ac871461020c5780639c2f61d61461021457610116565b80635b8f1c5a116100e95780635b8f1c5a14610169578063710304531461018957806374dc6b4b1461019c5780637998a1c4146101bc578063893d20e8146101d157610116565b80630f5f6b4f1461011b57806310587e95146101305780632057e3b61461014e5780633146d05814610156575b600080fd5b61012e610129366004610dba565b61027d565b005b6101386103a1565b6040516101459190611564565b60405180910390f35b6101386103c5565b61012e610164366004610ca4565b6103cb565b61017c610177366004610d3c565b6103cf565b6040516101459190611457565b61017c610197366004610c2e565b610429565b6101af6101aa366004610c2e565b61044b565b6040516101459190611556565b6101c4610486565b6040516101459190611465565b6101d96104b5565b6040516101459190611438565b61012e6101f4366004610cd4565b61054d565b610138610207366004610e52565b610565565b6101d96105a6565b61012e610222366004610e10565b6105ca565b61017c610235366004610ca4565b610717565b6102426107d5565b6040516101459190611446565b6101d961082c565b61012e610265366004610e52565b610850565b61012e610278366004610e10565b6108ee565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102ce5760405162461bcd60e51b81526004016102c5906114e6565b60405180910390fd5b6000806102dd83850185610e70565b91509150816000141561030f5780156103085760405162461bcd60e51b81526004016102c5906114b6565b505061039c565b6000811180156103225750620143708111155b61033e5760405162461bcd60e51b81526004016102c590611546565b6001600160a01b03851660008181526001602081905260409182902085815501839055517fed112d6c0e84b6900209ce5a4c04541bc63a517e0160888c447ee70be47ce60f906103919085908590611572565b60405180910390a250505b505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60025490565b5050565b60008061041184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061097f92505050565b50905061041e8782610717565b979650505050505050565b6001600160a01b03811660009081526020819052604090205460ff165b919050565b610453610b52565b506001600160a01b0316600090815260016020818152604092839020835180850190945280548452909101549082015290565b60408051808201909152601581527423aaa0a920a72a22a2a22fa922a222a6a82a24a7a760591b602082015290565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561051057600080fd5b505afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190610c4c565b905090565b60405162461bcd60e51b81526004016102c5906114a6565b6000814211610575575080610446565b6000610581428461099f565b9050600061059282620151806109c7565b905061059e428261099f565b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6105d26104b5565b6001600160a01b0316336001600160a01b0316146106025760405162461bcd60e51b81526004016102c590611486565b8061061f5760405162461bcd60e51b81526004016102c590611526565b60005b8181101561039c5761064e83838381811061063957fe5b90506020020160208101906101979190610c2e565b61066a5760405162461bcd60e51b81526004016102c590611506565b600080600085858581811061067b57fe5b90506020020160208101906106909190610c2e565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557fdf980d21d8c7bb34800e668dbe003299093bac8e693614151d3c57f73f98a93d8383838181106106e557fe5b90506020020160208101906106fa9190610c2e565b6040516107079190611438565b60405180910390a1600101610622565b600061072282610429565b61072e575060016107cf565b610736610b52565b506001600160a01b03831660009081526001602081815260409283902083518085019094528054808552920154908301526107755760009150506107cf565b60006107848260000151610565565b905061079d8260200151826109f990919063ffffffff16565b421015806107b857506002546107b490829061099f565b4211155b156107c8576001925050506107cf565b6000925050505b92915050565b6040805160018082528183019092526060916020808301908036833701905050905060048160008151811061080657fe5b6020026020010190600581111561081957fe5b9081600581111561082657fe5b90525090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6108586104b5565b6001600160a01b0316336001600160a01b0316146108885760405162461bcd60e51b81526004016102c590611486565b600254818114156108ab5760405162461bcd60e51b81526004016102c590611536565b60028290556040517f72325148df4fbe9f28de10305dd97d6bf5531327e3db352c17dd75f123a90751906108e29083908590611572565b60405180910390a15050565b6108f66104b5565b6001600160a01b0316336001600160a01b0316146109265760405162461bcd60e51b81526004016102c590611486565b806109435760405162461bcd60e51b81526004016102c5906114f6565b6103cb828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610a2592505050565b600080828060200190518101906109969190610c6a565b91509150915091565b6000828211156109c15760405162461bcd60e51b81526004016102c5906114c6565b50900390565b60008082116109e85760405162461bcd60e51b81526004016102c5906114d6565b8183816109f157fe5b069392505050565b600082820183811015610a1e5760405162461bcd60e51b81526004016102c590611496565b9392505050565b60005b81518110156103cb5760006001600160a01b0316828281518110610a4857fe5b60200260200101516001600160a01b03161415610a775760405162461bcd60e51b81526004016102c590611476565b610a93828281518110610a8657fe5b6020026020010151610429565b15610ab05760405162461bcd60e51b81526004016102c590611516565b6001600080848481518110610ac157fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcf9c2c7f9adbb156bd76affb04df84595f8f5e69cab2e61221b05b05a902fa26828281518110610b2d57fe5b6020026020010151604051610b429190611438565b60405180910390a1600101610a28565b604051806040016040528060008152602001600081525090565b80356107cf81611624565b80516107cf81611624565b60008083601f840112610b9457600080fd5b50813567ffffffffffffffff811115610bac57600080fd5b602083019150836020820283011115610bc457600080fd5b9250929050565b80516107cf81611638565b60008083601f840112610be857600080fd5b50813567ffffffffffffffff811115610c0057600080fd5b602083019150836001820283011115610bc457600080fd5b80356107cf81611641565b80356107cf8161164e565b600060208284031215610c4057600080fd5b600061059e8484610b6c565b600060208284031215610c5e57600080fd5b600061059e8484610b77565b60008060408385031215610c7d57600080fd5b6000610c898585610b77565b9250506020610c9a85828601610bcb565b9150509250929050565b60008060408385031215610cb757600080fd5b6000610cc38585610b6c565b9250506020610c9a85828601610b6c565b60008060008060608587031215610cea57600080fd5b6000610cf68787610b6c565b9450506020610d0787828801610b6c565b935050604085013567ffffffffffffffff811115610d2457600080fd5b610d3087828801610bd6565b95989497509550505050565b600080600080600060808688031215610d5457600080fd5b6000610d608888610b6c565b9550506020610d7188828901610b6c565b9450506040610d8288828901610c18565b935050606086013567ffffffffffffffff811115610d9f57600080fd5b610dab88828901610bd6565b92509250509295509295909350565b600080600060408486031215610dcf57600080fd5b6000610ddb8686610b6c565b935050602084013567ffffffffffffffff811115610df857600080fd5b610e0486828701610bd6565b92509250509250925092565b60008060208385031215610e2357600080fd5b823567ffffffffffffffff811115610e3a57600080fd5b610e4685828601610b82565b92509250509250929050565b600060208284031215610e6457600080fd5b600061059e8484610c23565b60008060408385031215610e8357600080fd5b6000610e8f8585610c23565b9250506020610c9a85828601610c23565b6000610eac8383610f25565b505060200190565b610ebd816115a0565b82525050565b6000610ece82611593565b610ed88185611597565b9350610ee38361158d565b8060005b83811015610f11578151610efb8882610ea0565b9750610f068361158d565b925050600101610ee7565b509495945050505050565b610ebd816115ab565b610ebd816115d6565b6000610f3982611593565b610f438185611597565b9350610f538185602086016115e1565b610f5c8161160d565b9093019392505050565b6000610f73603883611597565b7f5f5f616464526564656d7074696f6e426c6f636b696e6741646170746572733a81527f20616461707465722063616e6e6f7420626520656d7074790000000000000000602082015260400192915050565b6000610fd2604983611597565b7f6f6e6c7946756e644465706c6f7965724f776e65723a204f6e6c79207468652081527f46756e644465706c6f796572206f776e65722063616e2063616c6c207468697360208201526810333ab731ba34b7b760b91b604082015260600192915050565b6000611043601b83611597565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b600061107c603783611597565b7f75706461746546756e6453657474696e67733a2055706461746573206e6f742081527f616c6c6f77656420666f72207468697320706f6c696379000000000000000000602082015260400192915050565b60006110db603a83611597565b7f61646446756e6453657474696e67733a206475726174696f6e206d757374206281527f65203020696620737461727454696d657374616d702069732030000000000000602082015260400192915050565b600061113a601e83611597565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815260200192915050565b6000611173601883611597565b7f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815260200192915050565b60006111ac602983611597565b7f4f6e6c792074686520506f6c6963794d616e616765722063616e206d616b65208152681d1a1a5cc818d85b1b60ba1b602082015260400192915050565b60006111f7603a83611597565b7f5f5f616464526564656d7074696f6e426c6f636b696e6741646170746572733a81527f205f61646170746572732063616e6e6f7420626520656d707479000000000000602082015260400192915050565b6000611256603683611597565b7f72656d6f7665526564656d7074696f6e426c6f636b696e6741646170746572738152750e881859185c1d195c881a5cc81b9bdd08185919195960521b602082015260400192915050565b60006112ae603683611597565b7f5f5f616464526564656d7074696f6e426c6f636b696e6741646170746572733a815275081859185c1d195c88185b1c9958591e48185919195960521b602082015260400192915050565b6000611306603b83611597565b7f72656d6f7665526564656d7074696f6e426c6f636b696e67416461707465727381527f3a205f61646170746572732063616e6e6f7420626520656d7074790000000000602082015260400192915050565b6000611365602c83611597565b7f736574526564656d7074696f6e57696e646f774275666665723a2056616c756581526b08185b1c9958591e481cd95d60a21b602082015260400192915050565b60006113b3603f83611597565b7f61646446756e6453657474696e67733a206475726174696f6e206d757374206281527f65206265747765656e2031207365636f6e6420616e6420323320686f75727300602082015260400192915050565b80516040830190611416848261142f565b506020820151611429602085018261142f565b50505050565b610ebd816115d3565b602081016107cf8284610eb4565b60208082528101610a1e8184610ec3565b602081016107cf8284610f1c565b60208082528101610a1e8184610f2e565b602080825281016107cf81610f66565b602080825281016107cf81610fc5565b602080825281016107cf81611036565b602080825281016107cf8161106f565b602080825281016107cf816110ce565b602080825281016107cf8161112d565b602080825281016107cf81611166565b602080825281016107cf8161119f565b602080825281016107cf816111ea565b602080825281016107cf81611249565b602080825281016107cf816112a1565b602080825281016107cf816112f9565b602080825281016107cf81611358565b602080825281016107cf816113a6565b604081016107cf8284611405565b602081016107cf828461142f565b60408101611580828561142f565b610a1e602083018461142f565b60200190565b5190565b90815260200190565b60006107cf826115c7565b151590565b6001600160e01b03191690565b8061044681611617565b6001600160a01b031690565b90565b60006107cf826115bd565b60005b838110156115fc5781810151838201526020016115e4565b838111156114295750506000910152565b601f01601f191690565b6006811061162157fe5b50565b61162d816115a0565b811461162157600080fd5b61162d816115b0565b6006811061162157600080fd5b61162d816115d356fea26469706673582212207faa344f4fa4cc4d841f813a9f0f67e99073fc451e7e2b00a4a461225a22450464736f6c634300060c0033",
  "devdoc": {
    "author": "Enzyme Council <security@enzyme.finance>",
    "kind": "dev",
    "methods": {
      "activateForFund(address,address)": {
        "details": "Unimplemented by default, can be overridden by the policy"
      },
      "adapterCanBlockRedemption(address)": {
        "params": {
          "_adapter": "The address of the adapter to check"
        },
        "returns": {
          "canBlockRedemption_": "True if the adapter can block shares redemption"
        }
      },
      "addFundSettings(address,bytes)": {
        "params": {
          "_comptrollerProxy": "The fund's ComptrollerProxy address",
          "_encodedSettings": "Encoded settings to apply to a fund"
        }
      },
      "addRedemptionBlockingAdapters(address[])": {
        "params": {
          "_adapters": "The addresses of adapters to be added"
        }
      },
      "calcLatestRedemptionWindowStart(uint256)": {
        "params": {
          "_startTimestamp": "The initial startTimestamp for the redemption window"
        },
        "returns": {
          "latestRedemptionWindowStart_": "The starting timestamp of the most recent redemption window"
        }
      },
      "getFundDeployer()": {
        "returns": {
          "fundDeployer_": "The `FUND_DEPLOYER` variable value"
        }
      },
      "getOwner()": {
        "details": "Ownership is deferred to the owner of the FundDeployer contract",
        "returns": {
          "owner_": "The owner"
        }
      },
      "getPolicyManager()": {
        "returns": {
          "policyManager_": "The `POLICY_MANAGER` variable value"
        }
      },
      "getRedemptionWindowBuffer()": {
        "returns": {
          "redemptionWindowBuffer_": "The `redemptionWindowBuffer` variable value"
        }
      },
      "getRedemptionWindowForFund(address)": {
        "params": {
          "_comptrollerProxy": "The ComptrollerProxy of the fund"
        },
        "returns": {
          "redemptionWindow_": "The RedemptionWindow settings"
        }
      },
      "identifier()": {
        "returns": {
          "identifier_": "The identifer string"
        }
      },
      "implementedHooks()": {
        "returns": {
          "implementedHooks_": "The implemented PolicyHooks"
        }
      },
      "passesRule(address,address)": {
        "params": {
          "_adapter": "The adapter for which to check the rule",
          "_comptrollerProxy": "The fund's ComptrollerProxy address"
        },
        "returns": {
          "isValid_": "True if the rule passes"
        }
      },
      "removeRedemptionBlockingAdapters(address[])": {
        "params": {
          "_adapters": "The addresses of adapters to be removed"
        }
      },
      "setRedemptionWindowBuffer(uint256)": {
        "details": "The redemptionWindowBuffer is added to the beginning of the redemption window, and should always be >= the longest potential block on redemption amongst all adapters. (e.g., Synthetix blocks token transfers during a timelock after trading synths)",
        "params": {
          "_nextRedemptionWindowBuffer": "The number of seconds for the redemptionWindowBuffer"
        }
      },
      "updateFundSettings(address,address,bytes)": {
        "details": "Disallowed by default, can be overridden by the policy"
      },
      "validateRule(address,address,uint8,bytes)": {
        "params": {
          "_comptrollerProxy": "The fund's ComptrollerProxy address",
          "_encodedArgs": "Encoded args with which to validate the rule"
        },
        "returns": {
          "isValid_": "True if the rule passes"
        }
      }
    },
    "title": "GuaranteedRedemption Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "activateForFund(address,address)": {
        "notice": "Validates and initializes a policy as necessary prior to fund activation"
      },
      "adapterCanBlockRedemption(address)": {
        "notice": "Checks whether an adapter can block shares redemption"
      },
      "addFundSettings(address,bytes)": {
        "notice": "Add the initial policy settings for a fund"
      },
      "addRedemptionBlockingAdapters(address[])": {
        "notice": "Add adapters which can block shares redemption"
      },
      "calcLatestRedemptionWindowStart(uint256)": {
        "notice": "Calculates the start of the most recent redemption window"
      },
      "getFundDeployer()": {
        "notice": "Gets the `FUND_DEPLOYER` variable"
      },
      "getOwner()": {
        "notice": "Gets the owner of this contract"
      },
      "getPolicyManager()": {
        "notice": "Gets the `POLICY_MANAGER` variable value"
      },
      "getRedemptionWindowBuffer()": {
        "notice": "Gets the `redemptionWindowBuffer` variable"
      },
      "getRedemptionWindowForFund(address)": {
        "notice": "Gets the RedemptionWindow settings for a given fund"
      },
      "identifier()": {
        "notice": "Provides a constant string identifier for a policy"
      },
      "implementedHooks()": {
        "notice": "Gets the implemented PolicyHooks for a policy"
      },
      "passesRule(address,address)": {
        "notice": "Checks whether a particular condition passes the rule for a particular fund"
      },
      "removeRedemptionBlockingAdapters(address[])": {
        "notice": "Remove adapters which can block shares redemption"
      },
      "setRedemptionWindowBuffer(uint256)": {
        "notice": "Sets a new value for the redemptionWindowBuffer variable"
      },
      "updateFundSettings(address,address,bytes)": {
        "notice": "Updates the policy settings for a fund"
      },
      "validateRule(address,address,uint8,bytes)": {
        "notice": "Apply the rule with the specified parameters of a PolicyHook"
      }
    },
    "notice": "A policy that guarantees that shares will either be continuously redeemable or redeemable within a predictable daily window by preventing trading during a configurable daily period",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 38474,
        "contract": "contracts/release/extensions/policy-manager/policies/call-on-integration/GuaranteedRedemption.sol:GuaranteedRedemption",
        "label": "adapterToCanBlockRedemption",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 38478,
        "contract": "contracts/release/extensions/policy-manager/policies/call-on-integration/GuaranteedRedemption.sol:GuaranteedRedemption",
        "label": "comptrollerProxyToRedemptionWindow",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(RedemptionWindow)38463_storage)"
      },
      {
        "astId": 38480,
        "contract": "contracts/release/extensions/policy-manager/policies/call-on-integration/GuaranteedRedemption.sol:GuaranteedRedemption",
        "label": "redemptionWindowBuffer",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(RedemptionWindow)38463_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GuaranteedRedemption.RedemptionWindow)",
        "numberOfBytes": "32",
        "value": "t_struct(RedemptionWindow)38463_storage"
      },
      "t_struct(RedemptionWindow)38463_storage": {
        "encoding": "inplace",
        "label": "struct GuaranteedRedemption.RedemptionWindow",
        "members": [
          {
            "astId": 38460,
            "contract": "contracts/release/extensions/policy-manager/policies/call-on-integration/GuaranteedRedemption.sol:GuaranteedRedemption",
            "label": "startTimestamp",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 38462,
            "contract": "contracts/release/extensions/policy-manager/policies/call-on-integration/GuaranteedRedemption.sol:GuaranteedRedemption",
            "label": "duration",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}