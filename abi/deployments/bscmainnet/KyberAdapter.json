{
  "address": "0x6Bf11AA380c7985d2dF602871C28978cBd51C942",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_integrationManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_exchange",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wethToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ADD_TRACKED_ASSETS_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "APPROVE_ASSETS_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLAIM_REWARDS_AND_REINVEST_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLAIM_REWARDS_AND_SWAP_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLAIM_REWARDS_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEND_AND_STAKE_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEND_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REDEEM_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REMOVE_TRACKED_ASSETS_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKE_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TAKE_ORDER_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNSTAKE_AND_REDEEM_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNSTAKE_SELECTOR",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "exchange_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIntegrationManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "integrationManager_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWethToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "wethToken_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identifier",
      "outputs": [
        {
          "internalType": "string",
          "name": "identifier_",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "_encodedCallArgs",
          "type": "bytes"
        }
      ],
      "name": "parseAssetsForMethod",
      "outputs": [
        {
          "internalType": "enum IIntegrationManager.SpendAssetsHandleType",
          "name": "spendAssetsHandleType_",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "spendAssets_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "spendAssetAmounts_",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "incomingAssets_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "minIncomingAssetAmounts_",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultProxy",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_encodedCallArgs",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_encodedAssetTransferArgs",
          "type": "bytes"
        }
      ],
      "name": "takeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe44b43e518b172e517c6af6cbdb4c053f2a2935144e7e380c194de282545c00e",
  "receipt": {
    "to": null,
    "from": "0x5DB342FB039C1c85bec5fE89Af6734621f421D84",
    "contractAddress": "0x6Bf11AA380c7985d2dF602871C28978cBd51C942",
    "transactionIndex": 390,
    "gasUsed": "1611350",
    "logsBloom": "0x
    "blockHash": "0xe9c2ee2e30b3e669b13d3a501a98bc025d238e3d3a68197980e5ab4c986a3bb8",
    "transactionHash": "0xe44b43e518b172e517c6af6cbdb4c053f2a2935144e7e380c194de282545c00e",
    "logs": [],
    "blockNumber": 13359882,
    "cumulativeGasUsed": "57269458",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1aF5A3385FD2b673A70E773aa0B1034df33e890E",
    "0x0000000000000000000000000000000000000000",
    "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
  ],
  "linkedData": {
    "type": "ADAPTER"
  },
  "solcInputHash": "d9ca3c6c6b3274b287f1d69a6e9ab10d",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_integrationManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchange\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ADD_TRACKED_ASSETS_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APPROVE_ASSETS_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLAIM_REWARDS_AND_REINVEST_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLAIM_REWARDS_AND_SWAP_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLAIM_REWARDS_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEND_AND_STAKE_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEND_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REDEEM_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REMOVE_TRACKED_ASSETS_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKE_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TAKE_ORDER_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_AND_REDEEM_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"exchange_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIntegrationManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"integrationManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"wethToken_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"identifier_\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"_encodedCallArgs\",\"type\":\"bytes\"}],\"name\":\"parseAssetsForMethod\",\"outputs\":[{\"internalType\":\"enum IIntegrationManager.SpendAssetsHandleType\",\"name\":\"spendAssetsHandleType_\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"spendAssets_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"spendAssetAmounts_\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"incomingAssets_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minIncomingAssetAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_encodedCallArgs\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_encodedAssetTransferArgs\",\"type\":\"bytes\"}],\"name\":\"takeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"getExchange()\":{\"returns\":{\"exchange_\":\"The `EXCHANGE` variable value\"}},\"getIntegrationManager()\":{\"returns\":{\"integrationManager_\":\"The `INTEGRATION_MANAGER` variable value\"}},\"getWethToken()\":{\"returns\":{\"wethToken_\":\"The `WETH_TOKEN` variable value\"}},\"identifier()\":{\"returns\":{\"identifier_\":\"An identifier string\"}},\"parseAssetsForMethod(bytes4,bytes)\":{\"params\":{\"_encodedCallArgs\":\"The encoded parameters for the callOnIntegration\",\"_selector\":\"The function selector for the callOnIntegration\"},\"returns\":{\"incomingAssets_\":\"The assets to receive in the call\",\"minIncomingAssetAmounts_\":\"The min asset amounts to receive in the call\",\"spendAssetAmounts_\":\"The max asset amounts to spend in the call\",\"spendAssetsHandleType_\":\"A type that dictates how to handle granting the adapter access to spend assets (`None` by default)\",\"spendAssets_\":\"The assets to spend in the call\"}},\"takeOrder(address,bytes,bytes)\":{\"params\":{\"_encodedAssetTransferArgs\":\"Encoded args for expected assets to spend and receive\",\"_encodedCallArgs\":\"Encoded order parameters\",\"_vaultProxy\":\"The VaultProxy of the calling fund\"}}},\"title\":\"KyberAdapter Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getExchange()\":{\"notice\":\"Gets the `EXCHANGE` variable\"},\"getIntegrationManager()\":{\"notice\":\"Gets the `INTEGRATION_MANAGER` variable\"},\"getWethToken()\":{\"notice\":\"Gets the `WETH_TOKEN` variable\"},\"identifier()\":{\"notice\":\"Provides a constant string identifier for an adapter\"},\"parseAssetsForMethod(bytes4,bytes)\":{\"notice\":\"Parses the expected assets to receive from a call on integration\"},\"takeOrder(address,bytes,bytes)\":{\"notice\":\"Trades assets on Kyber\"}},\"notice\":\"Adapter for interacting with Kyber Network\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/integration-manager/integrations/adapters/KyberAdapter.sol\":\"KyberAdapter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/release/extensions/integration-manager/IIntegrationManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\n/*\\r\\n    This file is part of the Enzyme Protocol.\\r\\n\\r\\n    (c) Enzyme Council <council@enzyme.finance>\\r\\n\\r\\n    For the full license information, please view the LICENSE\\r\\n    file that was distributed with this source code.\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/// @title IIntegrationManager interface\\r\\n/// @author Enzyme Council <security@enzyme.finance>\\r\\n/// @notice Interface for the IntegrationManager\\r\\ninterface IIntegrationManager {\\r\\n    enum SpendAssetsHandleType {None, Approve, Transfer, Remove}\\r\\n}\\r\\n\",\"keccak256\":\"0xdcfcaaebcf2d3309e29391e0e2f6bdff09527787d4312dd6713a96f5e51b8262\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/integration-manager/integrations/IIntegrationAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\n/*\\r\\n    This file is part of the Enzyme Protocol.\\r\\n\\r\\n    (c) Enzyme Council <council@enzyme.finance>\\r\\n\\r\\n    For the full license information, please view the LICENSE\\r\\n    file that was distributed with this source code.\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\nimport \\\"../IIntegrationManager.sol\\\";\\r\\n\\r\\n/// @title Integration Adapter interface\\r\\n/// @author Enzyme Council <security@enzyme.finance>\\r\\n/// @notice Interface for all integration adapters\\r\\ninterface IIntegrationAdapter {\\r\\n    function identifier() external pure returns (string memory identifier_);\\r\\n\\r\\n    function parseAssetsForMethod(bytes4 _selector, bytes calldata _encodedCallArgs)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            IIntegrationManager.SpendAssetsHandleType spendAssetsHandleType_,\\r\\n            address[] memory spendAssets_,\\r\\n            uint256[] memory spendAssetAmounts_,\\r\\n            address[] memory incomingAssets_,\\r\\n            uint256[] memory minIncomingAssetAmounts_\\r\\n        );\\r\\n}\\r\\n\",\"keccak256\":\"0xd3635cf4bf3d4a9b2926a691e45acf69492585ee6e1e7e0fad18703e272ad273\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/integration-manager/integrations/adapters/KyberAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\n/*\\r\\n    This file is part of the Enzyme Protocol.\\r\\n\\r\\n    (c) Enzyme Council <council@enzyme.finance>\\r\\n\\r\\n    For the full license information, please view the LICENSE\\r\\n    file that was distributed with this source code.\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"../../../../interfaces/IKyberNetworkProxy.sol\\\";\\r\\nimport \\\"../../../../interfaces/IWETH.sol\\\";\\r\\nimport \\\"../../../../utils/MathHelpers.sol\\\";\\r\\nimport \\\"../utils/AdapterBase.sol\\\";\\r\\n\\r\\n/// @title KyberAdapter Contract\\r\\n/// @author Enzyme Council <security@enzyme.finance>\\r\\n/// @notice Adapter for interacting with Kyber Network\\r\\ncontract KyberAdapter is AdapterBase, MathHelpers {\\r\\n    address private immutable EXCHANGE;\\r\\n    address private immutable WETH_TOKEN;\\r\\n\\r\\n    constructor(\\r\\n        address _integrationManager,\\r\\n        address _exchange,\\r\\n        address _wethToken\\r\\n    ) public AdapterBase(_integrationManager) {\\r\\n        EXCHANGE = _exchange;\\r\\n        WETH_TOKEN = _wethToken;\\r\\n    }\\r\\n\\r\\n    /// @dev Needed to receive ETH from swap\\r\\n    receive() external payable {}\\r\\n\\r\\n    // EXTERNAL FUNCTIONS\\r\\n\\r\\n    /// @notice Provides a constant string identifier for an adapter\\r\\n    /// @return identifier_ An identifier string\\r\\n    function identifier() external pure override returns (string memory identifier_) {\\r\\n        return \\\"KYBER_NETWORK\\\";\\r\\n    }\\r\\n\\r\\n    /// @notice Parses the expected assets to receive from a call on integration\\r\\n    /// @param _selector The function selector for the callOnIntegration\\r\\n    /// @param _encodedCallArgs The encoded parameters for the callOnIntegration\\r\\n    /// @return spendAssetsHandleType_ A type that dictates how to handle granting\\r\\n    /// the adapter access to spend assets (`None` by default)\\r\\n    /// @return spendAssets_ The assets to spend in the call\\r\\n    /// @return spendAssetAmounts_ The max asset amounts to spend in the call\\r\\n    /// @return incomingAssets_ The assets to receive in the call\\r\\n    /// @return minIncomingAssetAmounts_ The min asset amounts to receive in the call\\r\\n    function parseAssetsForMethod(bytes4 _selector, bytes calldata _encodedCallArgs)\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (\\r\\n            IIntegrationManager.SpendAssetsHandleType spendAssetsHandleType_,\\r\\n            address[] memory spendAssets_,\\r\\n            uint256[] memory spendAssetAmounts_,\\r\\n            address[] memory incomingAssets_,\\r\\n            uint256[] memory minIncomingAssetAmounts_\\r\\n        )\\r\\n    {\\r\\n        require(_selector == TAKE_ORDER_SELECTOR, \\\"parseAssetsForMethod: _selector invalid\\\");\\r\\n\\r\\n        (\\r\\n            address incomingAsset,\\r\\n            uint256 minIncomingAssetAmount,\\r\\n            address outgoingAsset,\\r\\n            uint256 outgoingAssetAmount\\r\\n        ) = __decodeCallArgs(_encodedCallArgs);\\r\\n\\r\\n        require(\\r\\n            incomingAsset != outgoingAsset,\\r\\n            \\\"parseAssetsForMethod: incomingAsset and outgoingAsset asset cannot be the same\\\"\\r\\n        );\\r\\n        require(outgoingAssetAmount > 0, \\\"parseAssetsForMethod: outgoingAssetAmount must be >0\\\");\\r\\n\\r\\n        spendAssets_ = new address[](1);\\r\\n        spendAssets_[0] = outgoingAsset;\\r\\n        spendAssetAmounts_ = new uint256[](1);\\r\\n        spendAssetAmounts_[0] = outgoingAssetAmount;\\r\\n\\r\\n        incomingAssets_ = new address[](1);\\r\\n        incomingAssets_[0] = incomingAsset;\\r\\n        minIncomingAssetAmounts_ = new uint256[](1);\\r\\n        minIncomingAssetAmounts_[0] = minIncomingAssetAmount;\\r\\n\\r\\n        return (\\r\\n            IIntegrationManager.SpendAssetsHandleType.Transfer,\\r\\n            spendAssets_,\\r\\n            spendAssetAmounts_,\\r\\n            incomingAssets_,\\r\\n            minIncomingAssetAmounts_\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @notice Trades assets on Kyber\\r\\n    /// @param _vaultProxy The VaultProxy of the calling fund\\r\\n    /// @param _encodedCallArgs Encoded order parameters\\r\\n    /// @param _encodedAssetTransferArgs Encoded args for expected assets to spend and receive\\r\\n    function takeOrder(\\r\\n        address _vaultProxy,\\r\\n        bytes calldata _encodedCallArgs,\\r\\n        bytes calldata _encodedAssetTransferArgs\\r\\n    )\\r\\n        external\\r\\n        onlyIntegrationManager\\r\\n        fundAssetsTransferHandler(_vaultProxy, _encodedAssetTransferArgs)\\r\\n    {\\r\\n        (\\r\\n            address incomingAsset,\\r\\n            uint256 minIncomingAssetAmount,\\r\\n            address outgoingAsset,\\r\\n            uint256 outgoingAssetAmount\\r\\n        ) = __decodeCallArgs(_encodedCallArgs);\\r\\n\\r\\n        uint256 minExpectedRate = __calcNormalizedRate(\\r\\n            ERC20(outgoingAsset).decimals(),\\r\\n            outgoingAssetAmount,\\r\\n            ERC20(incomingAsset).decimals(),\\r\\n            minIncomingAssetAmount\\r\\n        );\\r\\n\\r\\n        if (outgoingAsset == WETH_TOKEN) {\\r\\n            __swapNativeAssetToToken(incomingAsset, outgoingAssetAmount, minExpectedRate);\\r\\n        } else if (incomingAsset == WETH_TOKEN) {\\r\\n            __swapTokenToNativeAsset(outgoingAsset, outgoingAssetAmount, minExpectedRate);\\r\\n        } else {\\r\\n            __swapTokenToToken(incomingAsset, outgoingAsset, outgoingAssetAmount, minExpectedRate);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // PRIVATE FUNCTIONS\\r\\n\\r\\n    /// @dev Helper to decode the encoded call arguments\\r\\n    function __decodeCallArgs(bytes memory _encodedCallArgs)\\r\\n        private\\r\\n        pure\\r\\n        returns (\\r\\n            address incomingAsset_,\\r\\n            uint256 minIncomingAssetAmount_,\\r\\n            address outgoingAsset_,\\r\\n            uint256 outgoingAssetAmount_\\r\\n        )\\r\\n    {\\r\\n        return abi.decode(_encodedCallArgs, (address, uint256, address, uint256));\\r\\n    }\\r\\n\\r\\n    /// @dev Executes a swap of ETH to ERC20\\r\\n    function __swapNativeAssetToToken(\\r\\n        address _incomingAsset,\\r\\n        uint256 _outgoingAssetAmount,\\r\\n        uint256 _minExpectedRate\\r\\n    ) private {\\r\\n        IWETH(payable(WETH_TOKEN)).withdraw(_outgoingAssetAmount);\\r\\n\\r\\n        IKyberNetworkProxy(EXCHANGE).swapEtherToToken{value: _outgoingAssetAmount}(\\r\\n            _incomingAsset,\\r\\n            _minExpectedRate\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Executes a swap of ERC20 to ETH\\r\\n    function __swapTokenToNativeAsset(\\r\\n        address _outgoingAsset,\\r\\n        uint256 _outgoingAssetAmount,\\r\\n        uint256 _minExpectedRate\\r\\n    ) private {\\r\\n        __approveMaxAsNeeded(_outgoingAsset, EXCHANGE, _outgoingAssetAmount);\\r\\n\\r\\n        IKyberNetworkProxy(EXCHANGE).swapTokenToEther(\\r\\n            _outgoingAsset,\\r\\n            _outgoingAssetAmount,\\r\\n            _minExpectedRate\\r\\n        );\\r\\n\\r\\n        IWETH(payable(WETH_TOKEN)).deposit{value: payable(address(this)).balance}();\\r\\n    }\\r\\n\\r\\n    /// @dev Executes a swap of ERC20 to ERC20\\r\\n    function __swapTokenToToken(\\r\\n        address _incomingAsset,\\r\\n        address _outgoingAsset,\\r\\n        uint256 _outgoingAssetAmount,\\r\\n        uint256 _minExpectedRate\\r\\n    ) private {\\r\\n        __approveMaxAsNeeded(_outgoingAsset, EXCHANGE, _outgoingAssetAmount);\\r\\n\\r\\n        IKyberNetworkProxy(EXCHANGE).swapTokenToToken(\\r\\n            _outgoingAsset,\\r\\n            _outgoingAssetAmount,\\r\\n            _incomingAsset,\\r\\n            _minExpectedRate\\r\\n        );\\r\\n    }\\r\\n\\r\\n    ///////////////////\\r\\n    // STATE GETTERS //\\r\\n    ///////////////////\\r\\n\\r\\n    /// @notice Gets the `EXCHANGE` variable\\r\\n    /// @return exchange_ The `EXCHANGE` variable value\\r\\n    function getExchange() external view returns (address exchange_) {\\r\\n        return EXCHANGE;\\r\\n    }\\r\\n\\r\\n    /// @notice Gets the `WETH_TOKEN` variable\\r\\n    /// @return wethToken_ The `WETH_TOKEN` variable value\\r\\n    function getWethToken() external view returns (address wethToken_) {\\r\\n        return WETH_TOKEN;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x369016d1e94311e6169550dbc11bc5a302ee5a6ceca94edd63bc1fd7bff1b6cb\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/integration-manager/integrations/utils/AdapterBase.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\n/*\\r\\n    This file is part of the Enzyme Protocol.\\r\\n\\r\\n    (c) Enzyme Council <council@enzyme.finance>\\r\\n\\r\\n    For the full license information, please view the LICENSE\\r\\n    file that was distributed with this source code.\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"../IIntegrationAdapter.sol\\\";\\r\\nimport \\\"./IntegrationSelectors.sol\\\";\\r\\n\\r\\n/// @title AdapterBase Contract\\r\\n/// @author Enzyme Council <security@enzyme.finance>\\r\\n/// @notice A base contract for integration adapters\\r\\nabstract contract AdapterBase is IIntegrationAdapter, IntegrationSelectors {\\r\\n    using SafeERC20 for ERC20;\\r\\n\\r\\n    address internal immutable INTEGRATION_MANAGER;\\r\\n\\r\\n    /// @dev Provides a standard implementation for transferring assets between\\r\\n    /// the fund's VaultProxy and the adapter, by wrapping the adapter action.\\r\\n    /// This modifier should be implemented in almost all adapter actions, unless they\\r\\n    /// do not move assets or can spend and receive assets directly with the VaultProxy\\r\\n    modifier fundAssetsTransferHandler(\\r\\n        address _vaultProxy,\\r\\n        bytes memory _encodedAssetTransferArgs\\r\\n    ) {\\r\\n        (\\r\\n            IIntegrationManager.SpendAssetsHandleType spendAssetsHandleType,\\r\\n            address[] memory spendAssets,\\r\\n            uint256[] memory spendAssetAmounts,\\r\\n            address[] memory incomingAssets\\r\\n        ) = __decodeEncodedAssetTransferArgs(_encodedAssetTransferArgs);\\r\\n\\r\\n        // Take custody of spend assets (if necessary)\\r\\n        if (spendAssetsHandleType == IIntegrationManager.SpendAssetsHandleType.Approve) {\\r\\n            for (uint256 i = 0; i < spendAssets.length; i++) {\\r\\n                ERC20(spendAssets[i]).safeTransferFrom(\\r\\n                    _vaultProxy,\\r\\n                    address(this),\\r\\n                    spendAssetAmounts[i]\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // Execute call\\r\\n        _;\\r\\n\\r\\n        // Transfer remaining assets back to the fund's VaultProxy\\r\\n        __transferContractAssetBalancesToFund(_vaultProxy, incomingAssets);\\r\\n        __transferContractAssetBalancesToFund(_vaultProxy, spendAssets);\\r\\n    }\\r\\n\\r\\n    modifier onlyIntegrationManager() {\\r\\n        require(\\r\\n            msg.sender == INTEGRATION_MANAGER,\\r\\n            \\\"Only the IntegrationManager can call this function\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _integrationManager) public {\\r\\n        INTEGRATION_MANAGER = _integrationManager;\\r\\n    }\\r\\n\\r\\n    // INTERNAL FUNCTIONS\\r\\n\\r\\n    /// @dev Helper for adapters to approve their integratees with the max amount of an asset.\\r\\n    /// Since everything is done atomically, and only the balances to-be-used are sent to adapters,\\r\\n    /// there is no need to approve exact amounts on every call.\\r\\n    function __approveMaxAsNeeded(\\r\\n        address _asset,\\r\\n        address _target,\\r\\n        uint256 _neededAmount\\r\\n    ) internal {\\r\\n        if (ERC20(_asset).allowance(address(this), _target) < _neededAmount) {\\r\\n            ERC20(_asset).safeApprove(_target, type(uint256).max);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Helper to decode the _encodedAssetTransferArgs param passed to adapter call\\r\\n    function __decodeEncodedAssetTransferArgs(bytes memory _encodedAssetTransferArgs)\\r\\n        internal\\r\\n        pure\\r\\n        returns (\\r\\n            IIntegrationManager.SpendAssetsHandleType spendAssetsHandleType_,\\r\\n            address[] memory spendAssets_,\\r\\n            uint256[] memory spendAssetAmounts_,\\r\\n            address[] memory incomingAssets_\\r\\n        )\\r\\n    {\\r\\n        return\\r\\n            abi.decode(\\r\\n                _encodedAssetTransferArgs,\\r\\n                (IIntegrationManager.SpendAssetsHandleType, address[], uint256[], address[])\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /// @dev Helper to transfer full contract balances of assets to the specified VaultProxy\\r\\n    function __transferContractAssetBalancesToFund(address _vaultProxy, address[] memory _assets)\\r\\n        private\\r\\n    {\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            uint256 postCallAmount = ERC20(_assets[i]).balanceOf(address(this));\\r\\n            if (postCallAmount > 0) {\\r\\n                ERC20(_assets[i]).safeTransfer(_vaultProxy, postCallAmount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ///////////////////\\r\\n    // STATE GETTERS //\\r\\n    ///////////////////\\r\\n\\r\\n    /// @notice Gets the `INTEGRATION_MANAGER` variable\\r\\n    /// @return integrationManager_ The `INTEGRATION_MANAGER` variable value\\r\\n    function getIntegrationManager() external view returns (address integrationManager_) {\\r\\n        return INTEGRATION_MANAGER;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x599794e4474eb906a0e1ae6c5051aa6289047e548bb9f605171c248e7758a783\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/integration-manager/integrations/utils/IntegrationSelectors.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\n/*\\r\\n    This file is part of the Enzyme Protocol.\\r\\n\\r\\n    (c) Enzyme Council <council@enzyme.finance>\\r\\n\\r\\n    For the full license information, please view the LICENSE\\r\\n    file that was distributed with this source code.\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/// @title IntegrationSelectors Contract\\r\\n/// @author Enzyme Council <security@enzyme.finance>\\r\\n/// @notice Selectors for integration actions\\r\\n/// @dev Selectors are created from their signatures rather than hardcoded for easy verification\\r\\nabstract contract IntegrationSelectors {\\r\\n    // Tracked assets\\r\\n    bytes4 public constant ADD_TRACKED_ASSETS_SELECTOR = bytes4(\\r\\n        keccak256(\\\"addTrackedAssets(address,bytes,bytes)\\\")\\r\\n    );\\r\\n    bytes4 public constant REMOVE_TRACKED_ASSETS_SELECTOR = bytes4(\\r\\n        keccak256(\\\"removeTrackedAssets(address,bytes,bytes)\\\")\\r\\n    );\\r\\n\\r\\n    // Asset approval\\r\\n    bytes4 public constant APPROVE_ASSETS_SELECTOR = bytes4(\\r\\n        keccak256(\\\"approveAssets(address,bytes,bytes)\\\")\\r\\n    );\\r\\n\\r\\n    // Trading\\r\\n    bytes4 public constant TAKE_ORDER_SELECTOR = bytes4(\\r\\n        keccak256(\\\"takeOrder(address,bytes,bytes)\\\")\\r\\n    );\\r\\n\\r\\n    // Lending\\r\\n    bytes4 public constant LEND_SELECTOR = bytes4(keccak256(\\\"lend(address,bytes,bytes)\\\"));\\r\\n    bytes4 public constant REDEEM_SELECTOR = bytes4(keccak256(\\\"redeem(address,bytes,bytes)\\\"));\\r\\n\\r\\n    // Staking\\r\\n    bytes4 public constant STAKE_SELECTOR = bytes4(keccak256(\\\"stake(address,bytes,bytes)\\\"));\\r\\n    bytes4 public constant UNSTAKE_SELECTOR = bytes4(keccak256(\\\"unstake(address,bytes,bytes)\\\"));\\r\\n\\r\\n    // Rewards\\r\\n    bytes4 public constant CLAIM_REWARDS_SELECTOR = bytes4(\\r\\n        keccak256(\\\"claimRewards(address,bytes,bytes)\\\")\\r\\n    );\\r\\n\\r\\n    // Combined\\r\\n    bytes4 public constant CLAIM_REWARDS_AND_REINVEST_SELECTOR = bytes4(\\r\\n        keccak256(\\\"claimRewardsAndReinvest(address,bytes,bytes)\\\")\\r\\n    );\\r\\n    bytes4 public constant CLAIM_REWARDS_AND_SWAP_SELECTOR = bytes4(\\r\\n        keccak256(\\\"claimRewardsAndSwap(address,bytes,bytes)\\\")\\r\\n    );\\r\\n    bytes4 public constant LEND_AND_STAKE_SELECTOR = bytes4(\\r\\n        keccak256(\\\"lendAndStake(address,bytes,bytes)\\\")\\r\\n    );\\r\\n    bytes4 public constant UNSTAKE_AND_REDEEM_SELECTOR = bytes4(\\r\\n        keccak256(\\\"unstakeAndRedeem(address,bytes,bytes)\\\")\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0x95effa25980655a5ce2e211ecc466bbed3509da2f88708287c372faa5b93030e\",\"license\":\"GPL-3.0\"},\"contracts/release/interfaces/IKyberNetworkProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\n/*\\r\\n    This file is part of the Enzyme Protocol.\\r\\n\\r\\n    (c) Enzyme Council <council@enzyme.finance>\\r\\n\\r\\n    For the full license information, please view the LICENSE\\r\\n    file that was distributed with this source code.\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/// @title Kyber Network interface\\r\\ninterface IKyberNetworkProxy {\\r\\n    function swapEtherToToken(address, uint256) external payable returns (uint256);\\r\\n\\r\\n    function swapTokenToEther(\\r\\n        address,\\r\\n        uint256,\\r\\n        uint256\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function swapTokenToToken(\\r\\n        address,\\r\\n        uint256,\\r\\n        address,\\r\\n        uint256\\r\\n    ) external returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x45255c08d7b63b98f6f42f6e9d43233dd26e500d4e42a1813233e23bef73ff61\",\"license\":\"GPL-3.0\"},\"contracts/release/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\n/*\\r\\n    This file is part of the Enzyme Protocol.\\r\\n\\r\\n    (c) Enzyme Council <council@enzyme.finance>\\r\\n\\r\\n    For the full license information, please view the LICENSE\\r\\n    file that was distributed with this source code.\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n/// @title WETH Interface\\r\\n/// @author Enzyme Council <security@enzyme.finance>\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function withdraw(uint256) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x259cbd7b40e9f61ba1b7c45302e5a9786729434f6ee8b88a9056d69388f60cb4\",\"license\":\"GPL-3.0\"},\"contracts/release/utils/MathHelpers.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\n/*\\r\\n    This file is part of the Enzyme Protocol.\\r\\n\\r\\n    (c) Enzyme Council <council@enzyme.finance>\\r\\n\\r\\n    For the full license information, please view the LICENSE\\r\\n    file that was distributed with this source code.\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.12;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\r\\n\\r\\n/// @title MathHelpers Contract\\r\\n/// @author Enzyme Council <security@enzyme.finance>\\r\\n/// @notice Helper functions for common math operations\\r\\nabstract contract MathHelpers {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    /// @dev Calculates a proportional value relative to a known ratio\\r\\n    function __calcRelativeQuantity(\\r\\n        uint256 _quantity1,\\r\\n        uint256 _quantity2,\\r\\n        uint256 _relativeQuantity1\\r\\n    ) internal pure returns (uint256 relativeQuantity2_) {\\r\\n        return _relativeQuantity1.mul(_quantity2).div(_quantity1);\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates a rate normalized to 10^18 precision,\\r\\n    /// for given base and quote asset decimals and amounts\\r\\n    function __calcNormalizedRate(\\r\\n        uint256 _baseAssetDecimals,\\r\\n        uint256 _baseAssetAmount,\\r\\n        uint256 _quoteAssetDecimals,\\r\\n        uint256 _quoteAssetAmount\\r\\n    ) internal pure returns (uint256 normalizedRate_) {\\r\\n        return\\r\\n            _quoteAssetAmount.mul(10**_baseAssetDecimals.add(18)).div(\\r\\n                _baseAssetAmount.mul(10**_quoteAssetDecimals)\\r\\n            );\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1113f87c30bd8eab8d859415e92d0cb75c334fa22fa2e88112eb74cf21b82fb7\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b50604051611cfc380380611cfc8339818101604052606081101561003357600080fd5b50805160208201516040909201516001600160601b0319606092831b811660805292821b831660a052901b1660c05260805160601c60a05160601c60c05160601c611c336100c960003980610835528061087f52806109ce528061103f5280611254525080610d7c52806110bd528061116a528061119152806112c352806112ea5250806105e05280610d105250611c336000f3fe6080604052600436106101185760003560e01c806376cc7ac6116100a0578063e4d9047811610064578063e4d904781461056c578063e7c4569014610581578063f075399414610596578063f7d882b5146105ab578063f807cd22146105c05761011f565b806376cc7ac6146102e25780637998a1c4146104a3578063863e5ad01461052d578063b23228cf14610542578063e27a06b5146105575761011f565b80633ffc1591116100e75780633ffc15911461025d57806340da225d1461027257806340f8cfcf146102875780634c252f911461029c5780635ca62b3c146102cd5761011f565b806303e38a2b14610124578063080456c114610201578063131461c014610233578063257cb1a3146102485761011f565b3661011f57005b600080fd5b34801561013057600080fd5b506101ff6004803603606081101561014757600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561017157600080fd5b82018360208201111561018357600080fd5b803590602001918460018302840111600160201b831117156101a457600080fd5b919390929091602081019035600160201b8111156101c157600080fd5b8201836020820111156101d357600080fd5b803590602001918460018302840111600160201b831117156101f457600080fd5b5090925090506105d5565b005b34801561020d57600080fd5b506102166108f4565b604080516001600160e01b03199092168252519081900360200190f35b34801561023f57600080fd5b50610216610918565b34801561025457600080fd5b5061021661093c565b34801561026957600080fd5b50610216610960565b34801561027e57600080fd5b50610216610984565b34801561029357600080fd5b506102166109a8565b3480156102a857600080fd5b506102b16109cc565b604080516001600160a01b039092168252519081900360200190f35b3480156102d957600080fd5b506102166109f0565b3480156102ee57600080fd5b5061036e6004803603604081101561030557600080fd5b6001600160e01b03198235169190810190604081016020820135600160201b81111561033057600080fd5b82018360208201111561034257600080fd5b803590602001918460018302840111600160201b8311171561036357600080fd5b509092509050610a14565b6040518086600381111561037e57fe5b815260200180602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156103cb5781810151838201526020016103b3565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561040a5781810151838201526020016103f2565b50505050905001858103835287818151815260200191508051906020019060200280838360005b83811015610449578181015183820152602001610431565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015610488578181015183820152602001610470565b50505050905001995050505050505050505060405180910390f35b3480156104af57600080fd5b506104b8610c57565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104f25781810151838201526020016104da565b50505050905090810190601f16801561051f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053957600080fd5b50610216610c7e565b34801561054e57600080fd5b50610216610ca2565b34801561056357600080fd5b50610216610cc6565b34801561057857600080fd5b50610216610cea565b34801561058d57600080fd5b506102b1610d0e565b3480156105a257600080fd5b50610216610d32565b3480156105b757600080fd5b50610216610d56565b3480156105cc57600080fd5b506102b1610d7a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461063c5760405162461bcd60e51b8152600401808060200182810382526032815260200180611ac96032913960400191505060405180910390fd5b8482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250606091508190508061068285610d9e565b92965090945092509050600184600381111561069a57fe5b14156106fc5760005b83518110156106fa576106f287308584815181106106bd57fe5b60200260200101518785815181106106d157fe5b60200260200101516001600160a01b0316610f66909392919063ffffffff16565b6001016106a3565b505b6000806000806107418e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc692505050565b93509350935093506000610831836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561078757600080fd5b505afa15801561079b573d6000803e3d6000fd5b505050506040513d60208110156107b157600080fd5b50516040805163313ce56760e01b8152905160ff9092169185916001600160a01b038a169163313ce56791600480820192602092909190829003018186803b1580156107fc57600080fd5b505afa158015610810573d6000803e3d6000fd5b505050506040513d602081101561082657600080fd5b505160ff1687611003565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561087d5761087885838361103d565b6108ce565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031614156108c257610878838383611164565b6108ce858484846112bd565b50505050506108dd86826113aa565b6108e786846113aa565b5050505050505050505050565b7f8334eb99be0145865eba9889fca2ee920288090caefff4cc776038e20ad9259a81565b7f29fa046e79524c3c5ac4c01df692c35e217802b2b13b21121b76cf0ef02b138c81565b7f099f75155f0e997bf83a7993a71d5e7e7540bd386fe1e84643a09ce6b412521981565b7ffa7dd04da627f433da73c4355ead9c75682a67a8fc84d3f6170ef0922f402d2481565b7fb9dfbaccbe5cd2a84fdcf1d15f23ef25d23086f5afbaa99516065ed4a5bbc7a381565b7ff658eb804cc1da8af5599b584aaf3d55407a3c721c42641a6a5270e963d782c381565b7f000000000000000000000000000000000000000000000000000000000000000090565b7fdfd5ee0f6067928bf85a7c4430811282840bc99332dda3dab462c02bf95b67cc81565b600060608080806001600160e01b031988166303e38a2b60e01b14610a6a5760405162461bcd60e51b8152600401808060200182810382526027815260200180611a7c6027913960400191505060405180910390fd5b600080600080610aaf8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc692505050565b9350935093509350816001600160a01b0316846001600160a01b03161415610b085760405162461bcd60e51b815260040180806020018281038252604e815260200180611afb604e913960600191505060405180910390fd5b60008111610b475760405162461bcd60e51b8152600401808060200182810382526034815260200180611b6a6034913960400191505060405180910390fd5b60408051600180825281830190925290602080830190803683370190505097508188600081518110610b7557fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505096508087600081518110610bb957fe5b6020908102919091010152604080516001808252818301909252908160200160208202803683370190505095508386600081518110610bf457fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505094508285600081518110610c3857fe5b6020026020010181815250506002985050505050939792965093509350565b60408051808201909152600d81526c4b594245525f4e4554574f524b60981b602082015290565b7f03e38a2bd7063d45c897edeafc330e71657502dd86434d3c37a489caf116af6981565b7f68e30677f607df46e87da13e15b637784cfa62374b653f35ab43d10361a2f83081565b7f848f3a590fb2f9795d1a275009c54c26c53833277c96b90e0ddd01753a1d590681565b7f3377e18acf9e83665eacd6af109261424fca32a298e2fc2e6095ba563fb8390e81565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f1d51f49b5273d9ddbb643dc349fab8d36dbb470209c2ea71033bea49dd311c2781565b7fc29fa9dde84204c2908778afd0613d802d31cf046179b88f6d2b4a4e507ea2d581565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006060806060848060200190516080811015610dba57600080fd5b815160208301805160405192949293830192919084600160201b821115610de057600080fd5b908301906020820185811115610df557600080fd5b82518660208202830111600160201b82111715610e1157600080fd5b82525081516020918201928201910280838360005b83811015610e3e578181015183820152602001610e26565b5050505090500160405260200180516040519392919084600160201b821115610e6657600080fd5b908301906020820185811115610e7b57600080fd5b82518660208202830111600160201b82111715610e9757600080fd5b82525081516020918201928201910280838360005b83811015610ec4578181015183820152602001610eac565b5050505090500160405260200180516040519392919084600160201b821115610eec57600080fd5b908301906020820185811115610f0157600080fd5b82518660208202830111600160201b82111715610f1d57600080fd5b82525081516020918201928201910280838360005b83811015610f4a578181015183820152602001610f32565b5050505090500160405250505093509350935093509193509193565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610fc090859061148b565b50505050565b600080600080848060200190516080811015610fe157600080fd5b5080516020820151604083015160609093015191989097509195509350915050565b600061103461101685600a86900a61153c565b61102e61102488601261159e565b8590600a0a61153c565b906115f8565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156110a357600080fd5b505af11580156110b7573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637a2a04568385846040518463ffffffff1660e01b815260040180836001600160a01b03168152602001828152602001925050506020604051808303818588803b15801561113257600080fd5b505af1158015611146573d6000803e3d6000fd5b50505050506040513d602081101561115d57600080fd5b5050505050565b61118f837f00000000000000000000000000000000000000000000000000000000000000008461165f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633bba21dc8484846040518463ffffffff1660e01b815260040180846001600160a01b031681526020018381526020018281526020019350505050602060405180830381600087803b15801561120e57600080fd5b505af1158015611222573d6000803e3d6000fd5b505050506040513d602081101561123857600080fd5b505060408051630d0e30db60e41b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163d0e30db09130319160048082019260009290919082900301818588803b15801561129f57600080fd5b505af11580156112b3573d6000803e3d6000fd5b5050505050505050565b6112e8837f00000000000000000000000000000000000000000000000000000000000000008461165f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637409e2eb848487856040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001836001600160a01b03168152602001828152602001945050505050602060405180830381600087803b15801561137857600080fd5b505af115801561138c573d6000803e3d6000fd5b505050506040513d60208110156113a257600080fd5b505050505050565b60005b81518110156114865760008282815181106113c457fe5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561141857600080fd5b505afa15801561142c573d6000803e3d6000fd5b505050506040513d602081101561144257600080fd5b50519050801561147d5761147d848285858151811061145d57fe5b60200260200101516001600160a01b03166116f79092919063ffffffff16565b506001016113ad565b505050565b60606114e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117499092919063ffffffff16565b805190915015611486578080602001905160208110156114ff57600080fd5b50516114865760405162461bcd60e51b815260040180806020018281038252602a815260200180611b9e602a913960400191505060405180910390fd5b60008261154b57506000611598565b8282028284828161155857fe5b04146115955760405162461bcd60e51b8152600401808060200182810382526021815260200180611b496021913960400191505060405180910390fd5b90505b92915050565b600082820183811015611595576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080821161164e576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161165757fe5b049392505050565b60408051636eb1769f60e11b81523060048201526001600160a01b0384811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156116af57600080fd5b505afa1580156116c3573d6000803e3d6000fd5b505050506040513d60208110156116d957600080fd5b50511015611486576114866001600160a01b03841683600019611762565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261148690849061148b565b60606117588484600085611875565b90505b9392505050565b8015806117e8575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b1580156117ba57600080fd5b505afa1580156117ce573d6000803e3d6000fd5b505050506040513d60208110156117e457600080fd5b5051155b6118235760405162461bcd60e51b8152600401808060200182810382526036815260200180611bc86036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261148690849061148b565b6060824710156118b65760405162461bcd60e51b8152600401808060200182810382526026815260200180611aa36026913960400191505060405180910390fd5b6118bf856119d1565b611910576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061194f5780518252601f199092019160209182019101611930565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146119b1576040519150601f19603f3d011682016040523d82523d6000602084013e6119b6565b606091505b50915091506119c68282866119d7565b979650505050505050565b3b151590565b606083156119e657508161175b565b8251156119f65782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a40578181015183820152602001611a28565b50505050905090810190601f168015611a6d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe7061727365417373657473466f724d6574686f643a205f73656c6563746f7220696e76616c6964416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4f6e6c792074686520496e746567726174696f6e4d616e616765722063616e2063616c6c20746869732066756e6374696f6e7061727365417373657473466f724d6574686f643a20696e636f6d696e67417373657420616e64206f7574676f696e6741737365742061737365742063616e6e6f74206265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f777061727365417373657473466f724d6574686f643a206f7574676f696e674173736574416d6f756e74206d757374206265203e305361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220c8606ea36e87cce5825c5109b3163680511dffd45ffa3c3aa1a2343ea12abe8764736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106101185760003560e01c806376cc7ac6116100a0578063e4d9047811610064578063e4d904781461056c578063e7c4569014610581578063f075399414610596578063f7d882b5146105ab578063f807cd22146105c05761011f565b806376cc7ac6146102e25780637998a1c4146104a3578063863e5ad01461052d578063b23228cf14610542578063e27a06b5146105575761011f565b80633ffc1591116100e75780633ffc15911461025d57806340da225d1461027257806340f8cfcf146102875780634c252f911461029c5780635ca62b3c146102cd5761011f565b806303e38a2b14610124578063080456c114610201578063131461c014610233578063257cb1a3146102485761011f565b3661011f57005b600080fd5b34801561013057600080fd5b506101ff6004803603606081101561014757600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561017157600080fd5b82018360208201111561018357600080fd5b803590602001918460018302840111600160201b831117156101a457600080fd5b919390929091602081019035600160201b8111156101c157600080fd5b8201836020820111156101d357600080fd5b803590602001918460018302840111600160201b831117156101f457600080fd5b5090925090506105d5565b005b34801561020d57600080fd5b506102166108f4565b604080516001600160e01b03199092168252519081900360200190f35b34801561023f57600080fd5b50610216610918565b34801561025457600080fd5b5061021661093c565b34801561026957600080fd5b50610216610960565b34801561027e57600080fd5b50610216610984565b34801561029357600080fd5b506102166109a8565b3480156102a857600080fd5b506102b16109cc565b604080516001600160a01b039092168252519081900360200190f35b3480156102d957600080fd5b506102166109f0565b3480156102ee57600080fd5b5061036e6004803603604081101561030557600080fd5b6001600160e01b03198235169190810190604081016020820135600160201b81111561033057600080fd5b82018360208201111561034257600080fd5b803590602001918460018302840111600160201b8311171561036357600080fd5b509092509050610a14565b6040518086600381111561037e57fe5b815260200180602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156103cb5781810151838201526020016103b3565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561040a5781810151838201526020016103f2565b50505050905001858103835287818151815260200191508051906020019060200280838360005b83811015610449578181015183820152602001610431565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015610488578181015183820152602001610470565b50505050905001995050505050505050505060405180910390f35b3480156104af57600080fd5b506104b8610c57565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104f25781810151838201526020016104da565b50505050905090810190601f16801561051f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053957600080fd5b50610216610c7e565b34801561054e57600080fd5b50610216610ca2565b34801561056357600080fd5b50610216610cc6565b34801561057857600080fd5b50610216610cea565b34801561058d57600080fd5b506102b1610d0e565b3480156105a257600080fd5b50610216610d32565b3480156105b757600080fd5b50610216610d56565b3480156105cc57600080fd5b506102b1610d7a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461063c5760405162461bcd60e51b8152600401808060200182810382526032815260200180611ac96032913960400191505060405180910390fd5b8482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250606091508190508061068285610d9e565b92965090945092509050600184600381111561069a57fe5b14156106fc5760005b83518110156106fa576106f287308584815181106106bd57fe5b60200260200101518785815181106106d157fe5b60200260200101516001600160a01b0316610f66909392919063ffffffff16565b6001016106a3565b505b6000806000806107418e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc692505050565b93509350935093506000610831836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561078757600080fd5b505afa15801561079b573d6000803e3d6000fd5b505050506040513d60208110156107b157600080fd5b50516040805163313ce56760e01b8152905160ff9092169185916001600160a01b038a169163313ce56791600480820192602092909190829003018186803b1580156107fc57600080fd5b505afa158015610810573d6000803e3d6000fd5b505050506040513d602081101561082657600080fd5b505160ff1687611003565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561087d5761087885838361103d565b6108ce565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031614156108c257610878838383611164565b6108ce858484846112bd565b50505050506108dd86826113aa565b6108e786846113aa565b5050505050505050505050565b7f8334eb99be0145865eba9889fca2ee920288090caefff4cc776038e20ad9259a81565b7f29fa046e79524c3c5ac4c01df692c35e217802b2b13b21121b76cf0ef02b138c81565b7f099f75155f0e997bf83a7993a71d5e7e7540bd386fe1e84643a09ce6b412521981565b7ffa7dd04da627f433da73c4355ead9c75682a67a8fc84d3f6170ef0922f402d2481565b7fb9dfbaccbe5cd2a84fdcf1d15f23ef25d23086f5afbaa99516065ed4a5bbc7a381565b7ff658eb804cc1da8af5599b584aaf3d55407a3c721c42641a6a5270e963d782c381565b7f000000000000000000000000000000000000000000000000000000000000000090565b7fdfd5ee0f6067928bf85a7c4430811282840bc99332dda3dab462c02bf95b67cc81565b600060608080806001600160e01b031988166303e38a2b60e01b14610a6a5760405162461bcd60e51b8152600401808060200182810382526027815260200180611a7c6027913960400191505060405180910390fd5b600080600080610aaf8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc692505050565b9350935093509350816001600160a01b0316846001600160a01b03161415610b085760405162461bcd60e51b815260040180806020018281038252604e815260200180611afb604e913960600191505060405180910390fd5b60008111610b475760405162461bcd60e51b8152600401808060200182810382526034815260200180611b6a6034913960400191505060405180910390fd5b60408051600180825281830190925290602080830190803683370190505097508188600081518110610b7557fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505096508087600081518110610bb957fe5b6020908102919091010152604080516001808252818301909252908160200160208202803683370190505095508386600081518110610bf457fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505094508285600081518110610c3857fe5b6020026020010181815250506002985050505050939792965093509350565b60408051808201909152600d81526c4b594245525f4e4554574f524b60981b602082015290565b7f03e38a2bd7063d45c897edeafc330e71657502dd86434d3c37a489caf116af6981565b7f68e30677f607df46e87da13e15b637784cfa62374b653f35ab43d10361a2f83081565b7f848f3a590fb2f9795d1a275009c54c26c53833277c96b90e0ddd01753a1d590681565b7f3377e18acf9e83665eacd6af109261424fca32a298e2fc2e6095ba563fb8390e81565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f1d51f49b5273d9ddbb643dc349fab8d36dbb470209c2ea71033bea49dd311c2781565b7fc29fa9dde84204c2908778afd0613d802d31cf046179b88f6d2b4a4e507ea2d581565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006060806060848060200190516080811015610dba57600080fd5b815160208301805160405192949293830192919084600160201b821115610de057600080fd5b908301906020820185811115610df557600080fd5b82518660208202830111600160201b82111715610e1157600080fd5b82525081516020918201928201910280838360005b83811015610e3e578181015183820152602001610e26565b5050505090500160405260200180516040519392919084600160201b821115610e6657600080fd5b908301906020820185811115610e7b57600080fd5b82518660208202830111600160201b82111715610e9757600080fd5b82525081516020918201928201910280838360005b83811015610ec4578181015183820152602001610eac565b5050505090500160405260200180516040519392919084600160201b821115610eec57600080fd5b908301906020820185811115610f0157600080fd5b82518660208202830111600160201b82111715610f1d57600080fd5b82525081516020918201928201910280838360005b83811015610f4a578181015183820152602001610f32565b5050505090500160405250505093509350935093509193509193565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610fc090859061148b565b50505050565b600080600080848060200190516080811015610fe157600080fd5b5080516020820151604083015160609093015191989097509195509350915050565b600061103461101685600a86900a61153c565b61102e61102488601261159e565b8590600a0a61153c565b906115f8565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156110a357600080fd5b505af11580156110b7573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637a2a04568385846040518463ffffffff1660e01b815260040180836001600160a01b03168152602001828152602001925050506020604051808303818588803b15801561113257600080fd5b505af1158015611146573d6000803e3d6000fd5b50505050506040513d602081101561115d57600080fd5b5050505050565b61118f837f00000000000000000000000000000000000000000000000000000000000000008461165f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633bba21dc8484846040518463ffffffff1660e01b815260040180846001600160a01b031681526020018381526020018281526020019350505050602060405180830381600087803b15801561120e57600080fd5b505af1158015611222573d6000803e3d6000fd5b505050506040513d602081101561123857600080fd5b505060408051630d0e30db60e41b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163d0e30db09130319160048082019260009290919082900301818588803b15801561129f57600080fd5b505af11580156112b3573d6000803e3d6000fd5b5050505050505050565b6112e8837f00000000000000000000000000000000000000000000000000000000000000008461165f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637409e2eb848487856040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001836001600160a01b03168152602001828152602001945050505050602060405180830381600087803b15801561137857600080fd5b505af115801561138c573d6000803e3d6000fd5b505050506040513d60208110156113a257600080fd5b505050505050565b60005b81518110156114865760008282815181106113c457fe5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561141857600080fd5b505afa15801561142c573d6000803e3d6000fd5b505050506040513d602081101561144257600080fd5b50519050801561147d5761147d848285858151811061145d57fe5b60200260200101516001600160a01b03166116f79092919063ffffffff16565b506001016113ad565b505050565b60606114e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117499092919063ffffffff16565b805190915015611486578080602001905160208110156114ff57600080fd5b50516114865760405162461bcd60e51b815260040180806020018281038252602a815260200180611b9e602a913960400191505060405180910390fd5b60008261154b57506000611598565b8282028284828161155857fe5b04146115955760405162461bcd60e51b8152600401808060200182810382526021815260200180611b496021913960400191505060405180910390fd5b90505b92915050565b600082820183811015611595576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080821161164e576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161165757fe5b049392505050565b60408051636eb1769f60e11b81523060048201526001600160a01b0384811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156116af57600080fd5b505afa1580156116c3573d6000803e3d6000fd5b505050506040513d60208110156116d957600080fd5b50511015611486576114866001600160a01b03841683600019611762565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261148690849061148b565b60606117588484600085611875565b90505b9392505050565b8015806117e8575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b1580156117ba57600080fd5b505afa1580156117ce573d6000803e3d6000fd5b505050506040513d60208110156117e457600080fd5b5051155b6118235760405162461bcd60e51b8152600401808060200182810382526036815260200180611bc86036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261148690849061148b565b6060824710156118b65760405162461bcd60e51b8152600401808060200182810382526026815260200180611aa36026913960400191505060405180910390fd5b6118bf856119d1565b611910576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061194f5780518252601f199092019160209182019101611930565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146119b1576040519150601f19603f3d011682016040523d82523d6000602084013e6119b6565b606091505b50915091506119c68282866119d7565b979650505050505050565b3b151590565b606083156119e657508161175b565b8251156119f65782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a40578181015183820152602001611a28565b50505050905090810190601f168015611a6d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe7061727365417373657473466f724d6574686f643a205f73656c6563746f7220696e76616c6964416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4f6e6c792074686520496e746567726174696f6e4d616e616765722063616e2063616c6c20746869732066756e6374696f6e7061727365417373657473466f724d6574686f643a20696e636f6d696e67417373657420616e64206f7574676f696e6741737365742061737365742063616e6e6f74206265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f777061727365417373657473466f724d6574686f643a206f7574676f696e674173736574416d6f756e74206d757374206265203e305361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220c8606ea36e87cce5825c5109b3163680511dffd45ffa3c3aa1a2343ea12abe8764736f6c634300060c0033",
  "devdoc": {
    "author": "Enzyme Council <security@enzyme.finance>",
    "kind": "dev",
    "methods": {
      "getExchange()": {
        "returns": {
          "exchange_": "The `EXCHANGE` variable value"
        }
      },
      "getIntegrationManager()": {
        "returns": {
          "integrationManager_": "The `INTEGRATION_MANAGER` variable value"
        }
      },
      "getWethToken()": {
        "returns": {
          "wethToken_": "The `WETH_TOKEN` variable value"
        }
      },
      "identifier()": {
        "returns": {
          "identifier_": "An identifier string"
        }
      },
      "parseAssetsForMethod(bytes4,bytes)": {
        "params": {
          "_encodedCallArgs": "The encoded parameters for the callOnIntegration",
          "_selector": "The function selector for the callOnIntegration"
        },
        "returns": {
          "incomingAssets_": "The assets to receive in the call",
          "minIncomingAssetAmounts_": "The min asset amounts to receive in the call",
          "spendAssetAmounts_": "The max asset amounts to spend in the call",
          "spendAssetsHandleType_": "A type that dictates how to handle granting the adapter access to spend assets (`None` by default)",
          "spendAssets_": "The assets to spend in the call"
        }
      },
      "takeOrder(address,bytes,bytes)": {
        "params": {
          "_encodedAssetTransferArgs": "Encoded args for expected assets to spend and receive",
          "_encodedCallArgs": "Encoded order parameters",
          "_vaultProxy": "The VaultProxy of the calling fund"
        }
      }
    },
    "title": "KyberAdapter Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getExchange()": {
        "notice": "Gets the `EXCHANGE` variable"
      },
      "getIntegrationManager()": {
        "notice": "Gets the `INTEGRATION_MANAGER` variable"
      },
      "getWethToken()": {
        "notice": "Gets the `WETH_TOKEN` variable"
      },
      "identifier()": {
        "notice": "Provides a constant string identifier for an adapter"
      },
      "parseAssetsForMethod(bytes4,bytes)": {
        "notice": "Parses the expected assets to receive from a call on integration"
      },
      "takeOrder(address,bytes,bytes)": {
        "notice": "Trades assets on Kyber"
      }
    },
    "notice": "Adapter for interacting with Kyber Network",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}