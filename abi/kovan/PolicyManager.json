{
  "address": "0x008DBE548c97D253c8161305883AE506f264c4fD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fundDeployer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "policy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "identifier",
          "type": "string"
        }
      ],
      "name": "PolicyDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "comptrollerProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "policy",
          "type": "address"
        }
      ],
      "name": "PolicyDisabledForFund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "comptrollerProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "policy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "settingsData",
          "type": "bytes"
        }
      ],
      "name": "PolicyEnabledForFund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "policy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "identifier",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "enum IPolicyManager.PolicyHook[]",
          "name": "implementedHooks",
          "type": "uint8[]"
        }
      ],
      "name": "PolicyRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isMigratedFund",
          "type": "bool"
        }
      ],
      "name": "activateForFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deactivateForFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_policies",
          "type": "address[]"
        }
      ],
      "name": "deregisterPolicies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        }
      ],
      "name": "disablePolicyForFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_settingsData",
          "type": "bytes"
        }
      ],
      "name": "enablePolicyForFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        }
      ],
      "name": "getEnabledPoliciesForFund",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "enabledPolicies_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFundDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "fundDeployer_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisteredPolicies",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "registeredPoliciesArray_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        }
      ],
      "name": "getVaultProxyForFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "vaultProxy_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        },
        {
          "internalType": "enum IPolicyManager.PolicyHook",
          "name": "_hook",
          "type": "uint8"
        }
      ],
      "name": "policyImplementsHook",
      "outputs": [
        {
          "internalType": "bool",
          "name": "implementsHook_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        }
      ],
      "name": "policyIsEnabledForFund",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isEnabled_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        }
      ],
      "name": "policyIsRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isRegistered_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "receiveCallFromComptroller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_policies",
          "type": "address[]"
        }
      ],
      "name": "registerPolicies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_configData",
          "type": "bytes"
        }
      ],
      "name": "setConfigForFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_settingsData",
          "type": "bytes"
        }
      ],
      "name": "updatePolicySettingsForFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptrollerProxy",
          "type": "address"
        },
        {
          "internalType": "enum IPolicyManager.PolicyHook",
          "name": "_hook",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_validationData",
          "type": "bytes"
        }
      ],
      "name": "validatePolicies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcb5816e0bb153d12ddd867a4e6e41c2cadfd841548053dfdd0aab28391599c0e",
  "receipt": {
    "to": null,
    "from": "0xf83F4c3A25b8FEE1722d76e5F72AaFcA00845011",
    "contractAddress": "0x008DBE548c97D253c8161305883AE506f264c4fD",
    "transactionIndex": 0,
    "gasUsed": "2114862",
    "logsBloom": "0x
    "blockHash": "0x578bab73f3254130f962ea006aa8ca002f7e6db75283e118b7ef53963fc3ac6d",
    "transactionHash": "0xcb5816e0bb153d12ddd867a4e6e41c2cadfd841548053dfdd0aab28391599c0e",
    "logs": [],
    "blockNumber": 27796684,
    "cumulativeGasUsed": "2114862",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x148a6FFbD7CCF8Ef7DB4dFD3103C4f197f3d46B2"
  ],
  "solcInputHash": "a255b7352a771229d5d6ada28c33f53e",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fundDeployer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"}],\"name\":\"PolicyDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"}],\"name\":\"PolicyDisabledForFund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"settingsData\",\"type\":\"bytes\"}],\"name\":\"PolicyEnabledForFund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum IPolicyManager.PolicyHook[]\",\"name\":\"implementedHooks\",\"type\":\"uint8[]\"}],\"name\":\"PolicyRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isMigratedFund\",\"type\":\"bool\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_policies\",\"type\":\"address[]\"}],\"name\":\"deregisterPolicies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"}],\"name\":\"disablePolicyForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_settingsData\",\"type\":\"bytes\"}],\"name\":\"enablePolicyForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getEnabledPoliciesForFund\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"enabledPolicies_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fundDeployer_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredPolicies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"registeredPoliciesArray_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getVaultProxyForFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vaultProxy_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"},{\"internalType\":\"enum IPolicyManager.PolicyHook\",\"name\":\"_hook\",\"type\":\"uint8\"}],\"name\":\"policyImplementsHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"implementsHook_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"}],\"name\":\"policyIsEnabledForFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isEnabled_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"}],\"name\":\"policyIsRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isRegistered_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveCallFromComptroller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_policies\",\"type\":\"address[]\"}],\"name\":\"registerPolicies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_configData\",\"type\":\"bytes\"}],\"name\":\"setConfigForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_settingsData\",\"type\":\"bytes\"}],\"name\":\"updatePolicySettingsForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"enum IPolicyManager.PolicyHook\",\"name\":\"_hook\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_validationData\",\"type\":\"bytes\"}],\"name\":\"validatePolicies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"activateForFund(bool)\":{\"details\":\"Caller is expected to be a valid ComptrollerProxy, but there isn't a need to validate.\",\"params\":{\"_isMigratedFund\":\"True if the fund is migrating to this release\"}},\"deregisterPolicies(address[])\":{\"params\":{\"_policies\":\"Addresses of policies to be registered\"}},\"disablePolicyForFund(address,address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_policy\":\"The policy address to disable\"}},\"enablePolicyForFund(address,address,bytes)\":{\"details\":\"Disabling a policy does not delete fund config on the policy, so if a policy is disabled and then enabled again, its initial state will be the previous config. It is the policy's job to determine how to merge that config with the _settingsData param in this function.\",\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_policy\":\"The policy address to enable\",\"_settingsData\":\"The encoded settings data with which to configure the policy\"}},\"getEnabledPoliciesForFund(address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\"},\"returns\":{\"enabledPolicies_\":\"An array of enabled policy addresses\"}},\"getFundDeployer()\":{\"returns\":{\"fundDeployer_\":\"The `FUND_DEPLOYER` variable value\"}},\"getOwner()\":{\"details\":\"Ownership is deferred to the owner of the FundDeployer contract\",\"returns\":{\"owner_\":\"The owner\"}},\"getRegisteredPolicies()\":{\"returns\":{\"registeredPoliciesArray_\":\"A list of all registered policy addresses\"}},\"getVaultProxyForFund(address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\"},\"returns\":{\"vaultProxy_\":\"The VaultProxy of the fund\"}},\"policyImplementsHook(address,uint8)\":{\"params\":{\"_hook\":\"The PolicyHook to check\",\"_policy\":\"The address of the policy to check\"},\"returns\":{\"implementsHook_\":\"True if the policy implements the hook\"}},\"policyIsEnabledForFund(address,address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund to check\",\"_policy\":\"The address of the policy to check\"},\"returns\":{\"isEnabled_\":\"True if the policy is enabled for the fund\"}},\"policyIsRegistered(address)\":{\"params\":{\"_policy\":\"The address of the policy to check\"},\"returns\":{\"isRegistered_\":\"True if the policy is registered\"}},\"receiveCallFromComptroller(address,uint256,bytes)\":{\"details\":\"Unimplemented by default, may be overridden.\"},\"registerPolicies(address[])\":{\"params\":{\"_policies\":\"Addresses of policies to be registered\"}},\"setConfigForFund(bytes)\":{\"details\":\"Only called during init() on ComptrollerProxy deployment\",\"params\":{\"_configData\":\"Encoded config data\"}},\"updatePolicySettingsForFund(address,address,bytes)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_policy\":\"The Policy contract to update\",\"_settingsData\":\"The encoded settings data with which to update the policy config\"}},\"validatePolicies(address,uint8,bytes)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_hook\":\"The PolicyHook for which to validate policies\",\"_validationData\":\"The encoded data with which to validate the filtered policies\"}}},\"title\":\"PolicyManager Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateForFund(bool)\":{\"notice\":\"Validates and initializes policies as necessary prior to fund activation\"},\"deactivateForFund()\":{\"notice\":\"Deactivates policies for a fund by destroying storage\"},\"deregisterPolicies(address[])\":{\"notice\":\"Remove policies from the list of registered policies\"},\"disablePolicyForFund(address,address)\":{\"notice\":\"Disables a policy for a fund\"},\"enablePolicyForFund(address,address,bytes)\":{\"notice\":\"Enables a policy for a fund\"},\"getEnabledPoliciesForFund(address)\":{\"notice\":\"Get a list of enabled policies for a given fund\"},\"getFundDeployer()\":{\"notice\":\"Gets the `FUND_DEPLOYER` variable\"},\"getOwner()\":{\"notice\":\"Gets the owner of this contract\"},\"getRegisteredPolicies()\":{\"notice\":\"Get all registered policies\"},\"getVaultProxyForFund(address)\":{\"notice\":\"Gets the verified VaultProxy for a given ComptrollerProxy\"},\"policyImplementsHook(address,uint8)\":{\"notice\":\"Checks if a policy implements a particular hook\"},\"policyIsEnabledForFund(address,address)\":{\"notice\":\"Check if a policy is enabled for the fund\"},\"policyIsRegistered(address)\":{\"notice\":\"Check whether a policy is registered\"},\"receiveCallFromComptroller(address,uint256,bytes)\":{\"notice\":\"Receives calls from ComptrollerLib.callOnExtension() and dispatches the appropriate action\"},\"registerPolicies(address[])\":{\"notice\":\"Add policies to the list of registered policies\"},\"setConfigForFund(bytes)\":{\"notice\":\"Enable policies for use in a fund\"},\"updatePolicySettingsForFund(address,address,bytes)\":{\"notice\":\"Updates policy settings for a fund\"},\"validatePolicies(address,uint8,bytes)\":{\"notice\":\"Validates all policies that apply to a given hook for a fund\"}},\"notice\":\"Manages policies for funds\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/policy-manager/PolicyManager.sol\":\"PolicyManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\"},\"contracts/persistent/utils/IMigratableVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IMigratableVault Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @dev DO NOT EDIT CONTRACT\\ninterface IMigratableVault {\\n    function canMigrate(address _who) external view returns (bool canMigrate_);\\n\\n    function init(\\n        address _owner,\\n        address _accessor,\\n        string calldata _fundName\\n    ) external;\\n\\n    function setAccessor(address _nextAccessor) external;\\n\\n    function setVaultLib(address _nextVaultLib) external;\\n}\\n\",\"keccak256\":\"0x8e1355a7efa8ec2172f5c9b532071def392b86ab1e5534d2fc73417a6e9f7238\",\"license\":\"GPL-3.0\"},\"contracts/release/core/fund-deployer/IFundDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IFundDeployer Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IFundDeployer {\\n    enum ReleaseStatus {PreLaunch, Live, Paused}\\n\\n    function getOwner() external view returns (address);\\n\\n    function getReleaseStatus() external view returns (ReleaseStatus);\\n\\n    function isRegisteredVaultCall(address, bytes4) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4147fc50c342dad395c366634a6bfa76020a76d7710698e2e79ab26ed8f5d31b\",\"license\":\"GPL-3.0\"},\"contracts/release/core/fund/comptroller/IComptroller.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IComptroller Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IComptroller {\\n    enum VaultAction {\\n        None,\\n        BurnShares,\\n        MintShares,\\n        TransferShares,\\n        ApproveAssetSpender,\\n        WithdrawAssetTo,\\n        AddTrackedAsset,\\n        RemoveTrackedAsset\\n    }\\n\\n    function activate(address, bool) external;\\n\\n    function calcGav(bool) external returns (uint256, bool);\\n\\n    function calcGrossShareValue(bool) external returns (uint256, bool);\\n\\n    function callOnExtension(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external;\\n\\n    function configureExtensions(bytes calldata, bytes calldata) external;\\n\\n    function destruct() external;\\n\\n    function getDenominationAsset() external view returns (address);\\n\\n    function getVaultProxy() external view returns (address);\\n\\n    function init(address, uint256) external;\\n\\n    function permissionedVaultAction(VaultAction, bytes calldata) external;\\n}\\n\",\"keccak256\":\"0x758108bbd2bae2ced8d4d3fdca63b7d57a4ca4526f184a3c4ec656b674623839\",\"license\":\"GPL-3.0\"},\"contracts/release/core/fund/vault/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../../../../persistent/utils/IMigratableVault.sol\\\";\\n\\n/// @title IVault Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IVault is IMigratableVault {\\n    function addTrackedAsset(address) external;\\n\\n    function approveAssetSpender(\\n        address,\\n        address,\\n        uint256\\n    ) external;\\n\\n    function burnShares(address, uint256) external;\\n\\n    function callOnContract(address, bytes calldata) external;\\n\\n    function getAccessor() external view returns (address);\\n\\n    function getOwner() external view returns (address);\\n\\n    function getTrackedAssets() external view returns (address[] memory);\\n\\n    function isTrackedAsset(address) external view returns (bool);\\n\\n    function mintShares(address, uint256) external;\\n\\n    function removeTrackedAsset(address) external;\\n\\n    function transferShares(\\n        address,\\n        address,\\n        uint256\\n    ) external;\\n\\n    function withdrawAssetTo(\\n        address,\\n        address,\\n        uint256\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6fd299ef44274395da4760c664246a6cc310437a2c426b2a40456446584ea258\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/IExtension.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title IExtension Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Interface for all extensions\\ninterface IExtension {\\n    function activateForFund(bool _isMigration) external;\\n\\n    function deactivateForFund() external;\\n\\n    function receiveCallFromComptroller(\\n        address _comptrollerProxy,\\n        uint256 _actionId,\\n        bytes calldata _callArgs\\n    ) external;\\n\\n    function setConfigForFund(bytes calldata _configData) external;\\n}\\n\",\"keccak256\":\"0x7fcbf884a27aca97ce8660cf5af9e52b436896bed8ceff1dd8e570a9358e6432\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/policy-manager/IPolicy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IPolicyManager.sol\\\";\\n\\n/// @title Policy Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\ninterface IPolicy {\\n    function activateForFund(address _comptrollerProxy, address _vaultProxy) external;\\n\\n    function addFundSettings(address _comptrollerProxy, bytes calldata _encodedSettings) external;\\n\\n    function identifier() external pure returns (string memory identifier_);\\n\\n    function implementedHooks()\\n        external\\n        view\\n        returns (IPolicyManager.PolicyHook[] memory implementedHooks_);\\n\\n    function updateFundSettings(\\n        address _comptrollerProxy,\\n        address _vaultProxy,\\n        bytes calldata _encodedSettings\\n    ) external;\\n\\n    function validateRule(\\n        address _comptrollerProxy,\\n        address _vaultProxy,\\n        IPolicyManager.PolicyHook _hook,\\n        bytes calldata _encodedArgs\\n    ) external returns (bool isValid_);\\n}\\n\",\"keccak256\":\"0x0e2e8a653f8c136c50e9b8642bd57744fe581d005e1ee787476a86f3ef40551f\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/policy-manager/IPolicyManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\n/// @title PolicyManager Interface\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Interface for the PolicyManager\\ninterface IPolicyManager {\\n    enum PolicyHook {\\n        BuySharesSetup,\\n        PreBuyShares,\\n        PostBuyShares,\\n        BuySharesCompleted,\\n        PreCallOnIntegration,\\n        PostCallOnIntegration\\n    }\\n\\n    function validatePolicies(\\n        address,\\n        PolicyHook,\\n        bytes calldata\\n    ) external;\\n}\\n\",\"keccak256\":\"0xedf25295ad42998e2651b3828c2be4a6aeef1176e0c669781074394e3d181732\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/policy-manager/PolicyManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/utils/EnumerableSet.sol\\\";\\nimport \\\"../../core/fund/vault/IVault.sol\\\";\\nimport \\\"../utils/ExtensionBase.sol\\\";\\nimport \\\"../utils/FundDeployerOwnerMixin.sol\\\";\\nimport \\\"./IPolicy.sol\\\";\\nimport \\\"./IPolicyManager.sol\\\";\\n\\n/// @title PolicyManager Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Manages policies for funds\\ncontract PolicyManager is IPolicyManager, ExtensionBase, FundDeployerOwnerMixin {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    event PolicyDeregistered(address indexed policy, string indexed identifier);\\n\\n    event PolicyDisabledForFund(address indexed comptrollerProxy, address indexed policy);\\n\\n    event PolicyEnabledForFund(\\n        address indexed comptrollerProxy,\\n        address indexed policy,\\n        bytes settingsData\\n    );\\n\\n    event PolicyRegistered(\\n        address indexed policy,\\n        string indexed identifier,\\n        PolicyHook[] implementedHooks\\n    );\\n\\n    EnumerableSet.AddressSet private registeredPolicies;\\n    mapping(address => mapping(PolicyHook => bool)) private policyToHookToIsImplemented;\\n    mapping(address => EnumerableSet.AddressSet) private comptrollerProxyToPolicies;\\n\\n    modifier onlyBuySharesHooks(address _policy) {\\n        require(\\n            !policyImplementsHook(_policy, PolicyHook.PreCallOnIntegration) &&\\n                !policyImplementsHook(_policy, PolicyHook.PostCallOnIntegration),\\n            \\\"onlyBuySharesHooks: Disallowed hook\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyEnabledPolicyForFund(address _comptrollerProxy, address _policy) {\\n        require(\\n            policyIsEnabledForFund(_comptrollerProxy, _policy),\\n            \\\"onlyEnabledPolicyForFund: Policy not enabled\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor(address _fundDeployer) public FundDeployerOwnerMixin(_fundDeployer) {}\\n\\n    // EXTERNAL FUNCTIONS\\n\\n    /// @notice Validates and initializes policies as necessary prior to fund activation\\n    /// @param _isMigratedFund True if the fund is migrating to this release\\n    /// @dev Caller is expected to be a valid ComptrollerProxy, but there isn't a need to validate.\\n    function activateForFund(bool _isMigratedFund) external override {\\n        address vaultProxy = __setValidatedVaultProxy(msg.sender);\\n\\n        // Policies must assert that they are congruent with migrated vault state\\n        if (_isMigratedFund) {\\n            address[] memory enabledPolicies = getEnabledPoliciesForFund(msg.sender);\\n            for (uint256 i; i < enabledPolicies.length; i++) {\\n                __activatePolicyForFund(msg.sender, vaultProxy, enabledPolicies[i]);\\n            }\\n        }\\n    }\\n\\n    /// @notice Deactivates policies for a fund by destroying storage\\n    function deactivateForFund() external override {\\n        delete comptrollerProxyToVaultProxy[msg.sender];\\n\\n        for (uint256 i = comptrollerProxyToPolicies[msg.sender].length(); i > 0; i--) {\\n            comptrollerProxyToPolicies[msg.sender].remove(\\n                comptrollerProxyToPolicies[msg.sender].at(i - 1)\\n            );\\n        }\\n    }\\n\\n    /// @notice Disables a policy for a fund\\n    /// @param _comptrollerProxy The ComptrollerProxy of the fund\\n    /// @param _policy The policy address to disable\\n    function disablePolicyForFund(address _comptrollerProxy, address _policy)\\n        external\\n        onlyBuySharesHooks(_policy)\\n        onlyEnabledPolicyForFund(_comptrollerProxy, _policy)\\n    {\\n        __validateIsFundOwner(getVaultProxyForFund(_comptrollerProxy), msg.sender);\\n\\n        comptrollerProxyToPolicies[_comptrollerProxy].remove(_policy);\\n\\n        emit PolicyDisabledForFund(_comptrollerProxy, _policy);\\n    }\\n\\n    /// @notice Enables a policy for a fund\\n    /// @param _comptrollerProxy The ComptrollerProxy of the fund\\n    /// @param _policy The policy address to enable\\n    /// @param _settingsData The encoded settings data with which to configure the policy\\n    /// @dev Disabling a policy does not delete fund config on the policy, so if a policy is\\n    /// disabled and then enabled again, its initial state will be the previous config. It is the\\n    /// policy's job to determine how to merge that config with the _settingsData param in this function.\\n    function enablePolicyForFund(\\n        address _comptrollerProxy,\\n        address _policy,\\n        bytes calldata _settingsData\\n    ) external onlyBuySharesHooks(_policy) {\\n        address vaultProxy = getVaultProxyForFund(_comptrollerProxy);\\n        __validateIsFundOwner(vaultProxy, msg.sender);\\n\\n        __enablePolicyForFund(_comptrollerProxy, _policy, _settingsData);\\n\\n        __activatePolicyForFund(_comptrollerProxy, vaultProxy, _policy);\\n    }\\n\\n    /// @notice Enable policies for use in a fund\\n    /// @param _configData Encoded config data\\n    /// @dev Only called during init() on ComptrollerProxy deployment\\n    function setConfigForFund(bytes calldata _configData) external override {\\n        (address[] memory policies, bytes[] memory settingsData) = abi.decode(\\n            _configData,\\n            (address[], bytes[])\\n        );\\n\\n        // Sanity check\\n        require(\\n            policies.length == settingsData.length,\\n            \\\"setConfigForFund: policies and settingsData array lengths unequal\\\"\\n        );\\n\\n        // Enable each policy with settings\\n        for (uint256 i; i < policies.length; i++) {\\n            __enablePolicyForFund(msg.sender, policies[i], settingsData[i]);\\n        }\\n    }\\n\\n    /// @notice Updates policy settings for a fund\\n    /// @param _comptrollerProxy The ComptrollerProxy of the fund\\n    /// @param _policy The Policy contract to update\\n    /// @param _settingsData The encoded settings data with which to update the policy config\\n    function updatePolicySettingsForFund(\\n        address _comptrollerProxy,\\n        address _policy,\\n        bytes calldata _settingsData\\n    ) external onlyBuySharesHooks(_policy) onlyEnabledPolicyForFund(_comptrollerProxy, _policy) {\\n        address vaultProxy = getVaultProxyForFund(_comptrollerProxy);\\n        __validateIsFundOwner(vaultProxy, msg.sender);\\n\\n        IPolicy(_policy).updateFundSettings(_comptrollerProxy, vaultProxy, _settingsData);\\n    }\\n\\n    /// @notice Validates all policies that apply to a given hook for a fund\\n    /// @param _comptrollerProxy The ComptrollerProxy of the fund\\n    /// @param _hook The PolicyHook for which to validate policies\\n    /// @param _validationData The encoded data with which to validate the filtered policies\\n    function validatePolicies(\\n        address _comptrollerProxy,\\n        PolicyHook _hook,\\n        bytes calldata _validationData\\n    ) external override {\\n        address vaultProxy = getVaultProxyForFund(_comptrollerProxy);\\n        address[] memory policies = getEnabledPoliciesForFund(_comptrollerProxy);\\n        for (uint256 i; i < policies.length; i++) {\\n            if (!policyImplementsHook(policies[i], _hook)) {\\n                continue;\\n            }\\n\\n            require(\\n                IPolicy(policies[i]).validateRule(\\n                    _comptrollerProxy,\\n                    vaultProxy,\\n                    _hook,\\n                    _validationData\\n                ),\\n                string(\\n                    abi.encodePacked(\\n                        \\\"Rule evaluated to false: \\\",\\n                        IPolicy(policies[i]).identifier()\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    // PRIVATE FUNCTIONS\\n\\n    /// @dev Helper to activate a policy for a fund\\n    function __activatePolicyForFund(\\n        address _comptrollerProxy,\\n        address _vaultProxy,\\n        address _policy\\n    ) private {\\n        IPolicy(_policy).activateForFund(_comptrollerProxy, _vaultProxy);\\n    }\\n\\n    /// @dev Helper to set config and enable policies for a fund\\n    function __enablePolicyForFund(\\n        address _comptrollerProxy,\\n        address _policy,\\n        bytes memory _settingsData\\n    ) private {\\n        require(\\n            !policyIsEnabledForFund(_comptrollerProxy, _policy),\\n            \\\"__enablePolicyForFund: policy already enabled\\\"\\n        );\\n        require(policyIsRegistered(_policy), \\\"__enablePolicyForFund: Policy is not registered\\\");\\n\\n        // Set fund config on policy\\n        if (_settingsData.length > 0) {\\n            IPolicy(_policy).addFundSettings(_comptrollerProxy, _settingsData);\\n        }\\n\\n        // Add policy\\n        comptrollerProxyToPolicies[_comptrollerProxy].add(_policy);\\n\\n        emit PolicyEnabledForFund(_comptrollerProxy, _policy, _settingsData);\\n    }\\n\\n    /// @dev Helper to validate fund owner.\\n    /// Preferred to a modifier because allows gas savings if re-using _vaultProxy.\\n    function __validateIsFundOwner(address _vaultProxy, address _who) private view {\\n        require(\\n            _who == IVault(_vaultProxy).getOwner(),\\n            \\\"Only the fund owner can call this function\\\"\\n        );\\n    }\\n\\n    ///////////////////////\\n    // POLICIES REGISTRY //\\n    ///////////////////////\\n\\n    /// @notice Remove policies from the list of registered policies\\n    /// @param _policies Addresses of policies to be registered\\n    function deregisterPolicies(address[] calldata _policies) external onlyFundDeployerOwner {\\n        require(_policies.length > 0, \\\"deregisterPolicies: _policies cannot be empty\\\");\\n\\n        for (uint256 i; i < _policies.length; i++) {\\n            require(\\n                policyIsRegistered(_policies[i]),\\n                \\\"deregisterPolicies: policy is not registered\\\"\\n            );\\n\\n            registeredPolicies.remove(_policies[i]);\\n\\n            emit PolicyDeregistered(_policies[i], IPolicy(_policies[i]).identifier());\\n        }\\n    }\\n\\n    /// @notice Add policies to the list of registered policies\\n    /// @param _policies Addresses of policies to be registered\\n    function registerPolicies(address[] calldata _policies) external onlyFundDeployerOwner {\\n        require(_policies.length > 0, \\\"registerPolicies: _policies cannot be empty\\\");\\n\\n        for (uint256 i; i < _policies.length; i++) {\\n            require(\\n                !policyIsRegistered(_policies[i]),\\n                \\\"registerPolicies: policy already registered\\\"\\n            );\\n\\n            registeredPolicies.add(_policies[i]);\\n\\n            // Store the hooks that a policy implements for later use.\\n            // Fronts the gas for calls to check if a hook is implemented, and guarantees\\n            // that the implementsHooks return value does not change post-registration.\\n            IPolicy policyContract = IPolicy(_policies[i]);\\n            PolicyHook[] memory implementedHooks = policyContract.implementedHooks();\\n            for (uint256 j; j < implementedHooks.length; j++) {\\n                policyToHookToIsImplemented[_policies[i]][implementedHooks[j]] = true;\\n            }\\n\\n            emit PolicyRegistered(_policies[i], policyContract.identifier(), implementedHooks);\\n        }\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    /// @notice Get all registered policies\\n    /// @return registeredPoliciesArray_ A list of all registered policy addresses\\n    function getRegisteredPolicies()\\n        external\\n        view\\n        returns (address[] memory registeredPoliciesArray_)\\n    {\\n        registeredPoliciesArray_ = new address[](registeredPolicies.length());\\n        for (uint256 i; i < registeredPoliciesArray_.length; i++) {\\n            registeredPoliciesArray_[i] = registeredPolicies.at(i);\\n        }\\n    }\\n\\n    /// @notice Get a list of enabled policies for a given fund\\n    /// @param _comptrollerProxy The ComptrollerProxy of the fund\\n    /// @return enabledPolicies_ An array of enabled policy addresses\\n    function getEnabledPoliciesForFund(address _comptrollerProxy)\\n        public\\n        view\\n        returns (address[] memory enabledPolicies_)\\n    {\\n        enabledPolicies_ = new address[](comptrollerProxyToPolicies[_comptrollerProxy].length());\\n        for (uint256 i; i < enabledPolicies_.length; i++) {\\n            enabledPolicies_[i] = comptrollerProxyToPolicies[_comptrollerProxy].at(i);\\n        }\\n    }\\n\\n    /// @notice Checks if a policy implements a particular hook\\n    /// @param _policy The address of the policy to check\\n    /// @param _hook The PolicyHook to check\\n    /// @return implementsHook_ True if the policy implements the hook\\n    function policyImplementsHook(address _policy, PolicyHook _hook)\\n        public\\n        view\\n        returns (bool implementsHook_)\\n    {\\n        return policyToHookToIsImplemented[_policy][_hook];\\n    }\\n\\n    /// @notice Check if a policy is enabled for the fund\\n    /// @param _comptrollerProxy The ComptrollerProxy of the fund to check\\n    /// @param _policy The address of the policy to check\\n    /// @return isEnabled_ True if the policy is enabled for the fund\\n    function policyIsEnabledForFund(address _comptrollerProxy, address _policy)\\n        public\\n        view\\n        returns (bool isEnabled_)\\n    {\\n        return comptrollerProxyToPolicies[_comptrollerProxy].contains(_policy);\\n    }\\n\\n    /// @notice Check whether a policy is registered\\n    /// @param _policy The address of the policy to check\\n    /// @return isRegistered_ True if the policy is registered\\n    function policyIsRegistered(address _policy) public view returns (bool isRegistered_) {\\n        return registeredPolicies.contains(_policy);\\n    }\\n}\\n\",\"keccak256\":\"0x5faf98de9081734851197873755c0159b203527c74d1b83bc116900b9fe62f10\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/utils/ExtensionBase.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../../core/fund/comptroller/IComptroller.sol\\\";\\nimport \\\"../../core/fund/vault/IVault.sol\\\";\\nimport \\\"../IExtension.sol\\\";\\n\\n/// @title ExtensionBase Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Base class for an extension\\nabstract contract ExtensionBase is IExtension {\\n    mapping(address => address) internal comptrollerProxyToVaultProxy;\\n\\n    /// @notice Allows extension to run logic during fund activation\\n    /// @dev Unimplemented by default, may be overridden.\\n    function activateForFund(bool) external virtual override {\\n        return;\\n    }\\n\\n    /// @notice Allows extension to run logic during fund deactivation (destruct)\\n    /// @dev Unimplemented by default, may be overridden.\\n    function deactivateForFund() external virtual override {\\n        return;\\n    }\\n\\n    /// @notice Receives calls from ComptrollerLib.callOnExtension()\\n    /// and dispatches the appropriate action\\n    /// @dev Unimplemented by default, may be overridden.\\n    function receiveCallFromComptroller(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external virtual override {\\n        revert(\\\"receiveCallFromComptroller: Unimplemented for Extension\\\");\\n    }\\n\\n    /// @notice Allows extension to run logic during fund configuration\\n    /// @dev Unimplemented by default, may be overridden.\\n    function setConfigForFund(bytes calldata) external virtual override {\\n        return;\\n    }\\n\\n    /// @dev Helper to validate a ComptrollerProxy-VaultProxy relation, which we store for both\\n    /// gas savings and to guarantee a spoofed ComptrollerProxy does not change getVaultProxy().\\n    /// Will revert without reason if the expected interfaces do not exist.\\n    function __setValidatedVaultProxy(address _comptrollerProxy)\\n        internal\\n        returns (address vaultProxy_)\\n    {\\n        require(\\n            comptrollerProxyToVaultProxy[_comptrollerProxy] == address(0),\\n            \\\"__setValidatedVaultProxy: Already set\\\"\\n        );\\n\\n        vaultProxy_ = IComptroller(_comptrollerProxy).getVaultProxy();\\n        require(vaultProxy_ != address(0), \\\"__setValidatedVaultProxy: Missing vaultProxy\\\");\\n\\n        require(\\n            _comptrollerProxy == IVault(vaultProxy_).getAccessor(),\\n            \\\"__setValidatedVaultProxy: Not the VaultProxy accessor\\\"\\n        );\\n\\n        comptrollerProxyToVaultProxy[_comptrollerProxy] = vaultProxy_;\\n\\n        return vaultProxy_;\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    /// @notice Gets the verified VaultProxy for a given ComptrollerProxy\\n    /// @param _comptrollerProxy The ComptrollerProxy of the fund\\n    /// @return vaultProxy_ The VaultProxy of the fund\\n    function getVaultProxyForFund(address _comptrollerProxy)\\n        public\\n        view\\n        returns (address vaultProxy_)\\n    {\\n        return comptrollerProxyToVaultProxy[_comptrollerProxy];\\n    }\\n}\\n\",\"keccak256\":\"0xf8a3a08a3d77853915c6b5c33d7d42be61d52326abb5b21371236d4269bd5a56\",\"license\":\"GPL-3.0\"},\"contracts/release/extensions/utils/FundDeployerOwnerMixin.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"../../core/fund-deployer/IFundDeployer.sol\\\";\\n\\n/// @title FundDeployerOwnerMixin Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A mixin contract that defers ownership to the owner of FundDeployer\\nabstract contract FundDeployerOwnerMixin {\\n    address internal immutable FUND_DEPLOYER;\\n\\n    modifier onlyFundDeployerOwner() {\\n        require(\\n            msg.sender == getOwner(),\\n            \\\"onlyFundDeployerOwner: Only the FundDeployer owner can call this function\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor(address _fundDeployer) public {\\n        FUND_DEPLOYER = _fundDeployer;\\n    }\\n\\n    /// @notice Gets the owner of this contract\\n    /// @return owner_ The owner\\n    /// @dev Ownership is deferred to the owner of the FundDeployer contract\\n    function getOwner() public view returns (address owner_) {\\n        return IFundDeployer(FUND_DEPLOYER).getOwner();\\n    }\\n\\n    ///////////////////\\n    // STATE GETTERS //\\n    ///////////////////\\n\\n    /// @notice Gets the `FUND_DEPLOYER` variable\\n    /// @return fundDeployer_ The `FUND_DEPLOYER` variable value\\n    function getFundDeployer() external view returns (address fundDeployer_) {\\n        return FUND_DEPLOYER;\\n    }\\n}\\n\",\"keccak256\":\"0xae16a22807bc31d46654889122b8db7ee55b731efc8d6feb4c978d13fee3336d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638af6d89e116100a2578063a5c6e2b811610071578063a5c6e2b814610216578063bd8e959a14610236578063e8cf4d431461023e578063ee37ebcf14610251578063fa5d06e31461026457610116565b80638af6d89e146101d3578063961363d9146101f357806397c0ac87146101fb5780639c532bac1461020357610116565b806348f35209116100e957806348f352091461017f5780634ed28b3f1461019257806380d57063146101a5578063893d20e8146101b857806389cbe1d0146101c057610116565b80630442bad51461011b5780631bee801e1461013057806345d582e7146101435780634679034614610156575b600080fd5b61012e610129366004611900565b610277565b005b61012e61013e366004611933565b61043d565b61012e61015136600461182f565b610455565b6101696101643660046117eb565b610536565b60405161017691906121d0565b60405180910390f35b61012e61018d366004611869565b610557565b61012e6101a0366004611869565b6105ff565b61012e6101b3366004611a38565b6106e9565b610169610742565b61012e6101ce366004611a74565b6107da565b6101e66101e13660046117eb565b61085a565b6040516101769190612297565b6101e6610920565b6101696109b5565b61012e610211366004611966565b6109d9565b61022961022436600461182f565b610ce6565b60405161017691906122b9565b61012e610d11565b61022961024c3660046118d0565b610d8b565b61012e61025f366004611966565b610dd6565b6102296102723660046117eb565b610f96565b600061028285610536565b9050606061028f8661085a565b905060005b8151811015610434576102ba8282815181106102ac57fe5b602002602001015187610d8b565b6102c35761042c565b8181815181106102cf57fe5b60200260200101516001600160a01b0316635b8f1c5a88858989896040518663ffffffff1660e01b815260040161030a959493929190612231565b602060405180830381600087803b15801561032457600080fd5b505af1158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c9190611a56565b82828151811061036857fe5b60200260200101516001600160a01b0316637998a1c46040518163ffffffff1660e01b815260040160006040518083038186803b1580156103a857600080fd5b505afa1580156103bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103e49190810190611aa9565b6040516020016103f491906121b9565b6040516020818303038152906040529061042a5760405162461bcd60e51b815260040161042191906122c7565b60405180910390fd5b505b600101610294565b50505050505050565b60405162461bcd60e51b815260040161042190612388565b80610461816004610d8b565b1580156104765750610474816005610d8b565b155b6104925760405162461bcd60e51b815260040161042190612368565b828261049e8282610ce6565b6104ba5760405162461bcd60e51b8152600401610421906123c8565b6104cc6104c686610536565b33610fa3565b6001600160a01b03851660009081526004602052604090206104ee9085611044565b50836001600160a01b0316856001600160a01b03167fd7b03d2e8be34a451c0a51c07755427856dd05d0343003f8a7ab0f1af52e96c560405160405180910390a35050505050565b6001600160a01b03808216600090815260208190526040902054165b919050565b82610563816004610d8b565b1580156105785750610576816005610d8b565b155b6105945760405162461bcd60e51b815260040161042190612368565b600061059f86610536565b90506105ab8133610fa3565b6105ec868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061105992505050565b6105f7868287611180565b505050505050565b8261060b816004610d8b565b158015610620575061061e816005610d8b565b155b61063c5760405162461bcd60e51b815260040161042190612368565b84846106488282610ce6565b6106645760405162461bcd60e51b8152600401610421906123c8565b600061066f88610536565b905061067b8133610fa3565b6040516308945f1960e41b81526001600160a01b03881690638945f190906106ad908b9085908b908b906004016121f9565b600060405180830381600087803b1580156106c757600080fd5b505af11580156106db573d6000803e3d6000fd5b505050505050505050505050565b60006106f4336111dc565b9050811561073e5760606107073361085a565b905060005b815181101561073b57610733338484848151811061072657fe5b6020026020010151611180565b60010161070c565b50505b5050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561079d57600080fd5b505afa1580156107b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d59190611811565b905090565b6060806107e9838501856119a7565b91509150805182511461080e5760405162461bcd60e51b815260040161042190612348565b60005b82518110156108535761084b3384838151811061082a57fe5b602002602001015184848151811061083e57fe5b6020026020010151611059565b600101610811565b5050505050565b6001600160a01b038116600090815260046020526040902060609061087e90611382565b6001600160401b038111801561089357600080fd5b506040519080825280602002602001820160405280156108bd578160200160208202803683370190505b50905060005b815181101561091a576001600160a01b03831660009081526004602052604090206108ee908261138d565b8282815181106108fa57fe5b6001600160a01b03909216602092830291909101909101526001016108c3565b50919050565b606061092c6001611382565b6001600160401b038111801561094157600080fd5b5060405190808252806020026020018201604052801561096b578160200160208202803683370190505b50905060005b81518110156109b15761098560018261138d565b82828151811061099157fe5b6001600160a01b0390921660209283029190910190910152600101610971565b5090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6109e1610742565b6001600160a01b0316336001600160a01b031614610a115760405162461bcd60e51b815260040161042190612318565b80610a2e5760405162461bcd60e51b815260040161042190612338565b60005b81811015610ce157610a5d838383818110610a4857fe5b905060200201602081019061027291906117eb565b15610a7a5760405162461bcd60e51b815260040161042190612308565b610aa6838383818110610a8957fe5b9050602002016020810190610a9e91906117eb565b600190611399565b506000838383818110610ab557fe5b9050602002016020810190610aca91906117eb565b90506060816001600160a01b031663cbf54bb26040518163ffffffff1660e01b815260040160006040518083038186803b158015610b0757600080fd5b505afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b439190810190611a04565b905060005b8151811015610beb57600160036000888888818110610b6357fe5b9050602002016020810190610b7891906117eb565b6001600160a01b03166001600160a01b031681526020019081526020016000206000848481518110610ba657fe5b60200260200101516005811115610bb957fe5b6005811115610bc457fe5b81526020810191909152604001600020805460ff1916911515919091179055600101610b48565b50816001600160a01b0316637998a1c46040518163ffffffff1660e01b815260040160006040518083038186803b158015610c2557600080fd5b505afa158015610c39573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c619190810190611aa9565b604051610c6e91906121a6565b6040518091039020858585818110610c8257fe5b9050602002016020810190610c9791906117eb565b6001600160a01b03167f7fc39bd4ad1acc50e51318d02e8590c304ae9c0060c220cc780ea18720745c5283604051610ccf91906122a8565b60405180910390a35050600101610a31565b505050565b6001600160a01b0382166000908152600460205260408120610d0890836113ae565b90505b92915050565b3360009081526020818152604080832080546001600160a01b031916905560049091528120610d3f90611382565b90505b8015610d8857336000908152600460205260409020610d7e90610d6990600019840161138d565b33600090815260046020526040902090611044565b5060001901610d42565b50565b6001600160a01b038216600090815260036020526040812081836005811115610db057fe5b6005811115610dbb57fe5b815260208101919091526040016000205460ff169392505050565b610dde610742565b6001600160a01b0316336001600160a01b031614610e0e5760405162461bcd60e51b815260040161042190612318565b80610e2b5760405162461bcd60e51b815260040161042190612358565b60005b81811015610ce157610e45838383818110610a4857fe5b610e615760405162461bcd60e51b8152600401610421906122f8565b610e8d838383818110610e7057fe5b9050602002016020810190610e8591906117eb565b600190611044565b50828282818110610e9a57fe5b9050602002016020810190610eaf91906117eb565b6001600160a01b0316637998a1c46040518163ffffffff1660e01b815260040160006040518083038186803b158015610ee757600080fd5b505afa158015610efb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f239190810190611aa9565b604051610f3091906121a6565b6040518091039020838383818110610f4457fe5b9050602002016020810190610f5991906117eb565b6001600160a01b03167f538f684b60a142c0b72b895be785c0aef10b373c6c5c4e8a7eb49baa244f64d360405160405180910390a3600101610e2e565b6000610d0b6001836113ae565b816001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015610fdc57600080fd5b505afa158015610ff0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110149190611811565b6001600160a01b0316816001600160a01b03161461073e5760405162461bcd60e51b815260040161042190612398565b6000610d08836001600160a01b0384166113c3565b6110638383610ce6565b156110805760405162461bcd60e51b8152600401610421906123a8565b61108982610f96565b6110a55760405162461bcd60e51b8152600401610421906123b8565b80511561110d57604051630f5f6b4f60e01b81526001600160a01b03831690630f5f6b4f906110da9086908590600401612277565b600060405180830381600087803b1580156110f457600080fd5b505af1158015611108573d6000803e3d6000fd5b505050505b6001600160a01b038316600090815260046020526040902061112f9083611399565b50816001600160a01b0316836001600160a01b03167faa4df4fe117c520783cfff01c11283496ff2999c77c2a9b800808251a9a0332a8360405161117391906122c7565b60405180910390a3505050565b604051630628da0b60e31b81526001600160a01b03821690633146d058906111ae90869086906004016121de565b600060405180830381600087803b1580156111c857600080fd5b505af1158015610434573d6000803e3d6000fd5b6001600160a01b03818116600090815260208190526040812054909116156112165760405162461bcd60e51b8152600401610421906122e8565b816001600160a01b031663c98091876040518163ffffffff1660e01b815260040160206040518083038186803b15801561124f57600080fd5b505afa158015611263573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112879190611811565b90506001600160a01b0381166112af5760405162461bcd60e51b815260040161042190612328565b806001600160a01b0316635a53e3486040518163ffffffff1660e01b815260040160206040518083038186803b1580156112e857600080fd5b505afa1580156112fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113209190611811565b6001600160a01b0316826001600160a01b0316146113505760405162461bcd60e51b815260040161042190612378565b6001600160a01b03918216600090815260208190526040902080546001600160a01b0319169282169290921790915590565b6000610d0b82611489565b6000610d08838361148d565b6000610d08836001600160a01b0384166114d2565b6000610d08836001600160a01b03841661151c565b6000818152600183016020526040812054801561147f57835460001980830191908101906000908790839081106113f657fe5b906000526020600020015490508087600001848154811061141357fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061144357fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610d0b565b6000915050610d0b565b5490565b815460009082106114b05760405162461bcd60e51b8152600401610421906122d8565b8260000182815481106114bf57fe5b9060005260206000200154905092915050565b60006114de838361151c565b61151457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610d0b565b506000610d0b565b60009081526001919091016020526040902054151590565b8035610d0b816124d8565b8051610d0b816124d8565b60008083601f84011261155c57600080fd5b5081356001600160401b0381111561157357600080fd5b60208301915083602082028301111561158b57600080fd5b9250929050565b600082601f8301126115a357600080fd5b81356115b66115b1826123fe565b6123d8565b915081818352602084019350602081019050838560208402820111156115db57600080fd5b60005b8381101561160757816115f18882611534565b84525060209283019291909101906001016115de565b5050505092915050565b600082601f83011261162257600080fd5b81356116306115b1826123fe565b81815260209384019390925082018360005b8381101561160757813586016116588882611735565b8452506020928301929190910190600101611642565b600082601f83011261167f57600080fd5b815161168d6115b1826123fe565b915081818352602084019350602081019050838560208402820111156116b257600080fd5b60005b8381101561160757816116c8888261178f565b84525060209283019291909101906001016116b5565b8035610d0b816124ec565b8051610d0b816124ec565b60008083601f84011261170657600080fd5b5081356001600160401b0381111561171d57600080fd5b60208301915083600182028301111561158b57600080fd5b600082601f83011261174657600080fd5b81356117546115b18261241e565b9150808252602083016020830185838301111561177057600080fd5b61177b83828461248c565b50505092915050565b8035610d0b816124f5565b8051610d0b816124f5565b600082601f8301126117ab57600080fd5b81516117b96115b18261241e565b915080825260208301602083018583830111156117d557600080fd5b61177b838284612498565b8035610d0b81612502565b6000602082840312156117fd57600080fd5b60006118098484611534565b949350505050565b60006020828403121561182357600080fd5b6000611809848461153f565b6000806040838503121561184257600080fd5b600061184e8585611534565b925050602061185f85828601611534565b9150509250929050565b6000806000806060858703121561187f57600080fd5b600061188b8787611534565b945050602061189c87828801611534565b93505060408501356001600160401b038111156118b857600080fd5b6118c4878288016116f4565b95989497509550505050565b600080604083850312156118e357600080fd5b60006118ef8585611534565b925050602061185f85828601611784565b6000806000806060858703121561191657600080fd5b60006119228787611534565b945050602061189c87828801611784565b6000806000806060858703121561194957600080fd5b60006119558787611534565b945050602061189c878288016117e0565b6000806020838503121561197957600080fd5b82356001600160401b0381111561198f57600080fd5b61199b8582860161154a565b92509250509250929050565b600080604083850312156119ba57600080fd5b82356001600160401b038111156119d057600080fd5b6119dc85828601611592565b92505060208301356001600160401b038111156119f857600080fd5b61185f85828601611611565b600060208284031215611a1657600080fd5b81516001600160401b03811115611a2c57600080fd5b6118098482850161166e565b600060208284031215611a4a57600080fd5b600061180984846116de565b600060208284031215611a6857600080fd5b600061180984846116e9565b60008060208385031215611a8757600080fd5b82356001600160401b03811115611a9d57600080fd5b61199b858286016116f4565b600060208284031215611abb57600080fd5b81516001600160401b03811115611ad157600080fd5b6118098482850161179a565b6000611ae98383611afd565b505060200190565b6000611ae98383611c16565b611b0681612458565b82525050565b6000611b178261244b565b611b21818561244f565b9350611b2c83612445565b8060005b83811015611b5a578151611b448882611add565b9750611b4f83612445565b925050600101611b30565b509495945050505050565b6000611b708261244b565b611b7a818561244f565b9350611b8583612445565b8060005b83811015611b5a578151611b9d8882611af1565b9750611ba883612445565b925050600101611b89565b611b0681612463565b6000611bc8838561244f565b9350611bd583858461248c565b611bde836124c4565b9093019392505050565b6000611bf38261244b565b611bfd818561244f565b9350611c0d818560208601612498565b611bde816124c4565b611b0681612481565b6000611c2a8261244b565b611c348185610552565b9350611c44818560208601612498565b9290920192915050565b6000611c5b60228361244f565b7f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e815261647360f01b602082015260400192915050565b6000611c9f60258361244f565b7f5f5f73657456616c6964617465645661756c7450726f78793a20416c726561648152641e481cd95d60da1b602082015260400192915050565b6000611ce6602c8361244f565b7f64657265676973746572506f6c69636965733a20706f6c696379206973206e6f81526b1d081c9959da5cdd195c995960a21b602082015260400192915050565b6000611d34602b8361244f565b7f7265676973746572506f6c69636965733a20706f6c69637920616c726561647981526a081c9959da5cdd195c995960aa1b602082015260400192915050565b6000611d8160498361244f565b7f6f6e6c7946756e644465706c6f7965724f776e65723a204f6e6c79207468652081527f46756e644465706c6f796572206f776e65722063616e2063616c6c207468697360208201526810333ab731ba34b7b760b91b604082015260600192915050565b6000611df2602c8361244f565b7f5f5f73657456616c6964617465645661756c7450726f78793a204d697373696e81526b67207661756c7450726f787960a01b602082015260400192915050565b6000611e40602b8361244f565b7f7265676973746572506f6c69636965733a205f706f6c69636965732063616e6e81526a6f7420626520656d70747960a81b602082015260400192915050565b6000611e8d60418361244f565b7f736574436f6e666967466f7246756e643a20706f6c696369657320616e64207381527f657474696e677344617461206172726179206c656e6774687320756e657175616020820152601b60fa1b604082015260600192915050565b6000611ef6602d8361244f565b7f64657265676973746572506f6c69636965733a205f706f6c696369657320636181526c6e6e6f7420626520656d70747960981b602082015260400192915050565b6000611f4560238361244f565b7f6f6e6c79427579536861726573486f6f6b733a20446973616c6c6f77656420688152626f6f6b60e81b602082015260400192915050565b6000611f8a601983610552565b7f52756c65206576616c756174656420746f2066616c73653a2000000000000000815260190192915050565b6000611fc360358361244f565b7f5f5f73657456616c6964617465645661756c7450726f78793a204e6f7420746881527432902b30bab63a283937bc3c9030b1b1b2b9b9b7b960591b602082015260400192915050565b600061201a60378361244f565b7f7265636569766543616c6c46726f6d436f6d7074726f6c6c65723a20556e696d81527f706c656d656e74656420666f7220457874656e73696f6e000000000000000000602082015260400192915050565b6000612079602a8361244f565b7f4f6e6c79207468652066756e64206f776e65722063616e2063616c6c207468698152693990333ab731ba34b7b760b11b602082015260400192915050565b60006120c5602d8361244f565b7f5f5f656e61626c65506f6c696379466f7246756e643a20706f6c69637920616c81526c1c9958591e48195b98589b1959609a1b602082015260400192915050565b6000612114602f8361244f565b7f5f5f656e61626c65506f6c696379466f7246756e643a20506f6c69637920697381526e081b9bdd081c9959da5cdd195c9959608a1b602082015260400192915050565b6000612165602c8361244f565b7f6f6e6c79456e61626c6564506f6c696379466f7246756e643a20506f6c69637981526b081b9bdd08195b98589b195960a21b602082015260400192915050565b60006121b28284611c1f565b9392505050565b60006121c482611f7d565b91506121b28284611c1f565b60208101610d0b8284611afd565b604081016121ec8285611afd565b6121b26020830184611afd565b606081016122078287611afd565b6122146020830186611afd565b8181036040830152612227818486611bbc565b9695505050505050565b6080810161223f8288611afd565b61224c6020830187611afd565b6122596040830186611c16565b818103606083015261226c818486611bbc565b979650505050505050565b604081016122858285611afd565b81810360208301526118098184611be8565b60208082528101610d088184611b0c565b60208082528101610d088184611b65565b60208101610d0b8284611bb3565b60208082528101610d088184611be8565b60208082528101610d0b81611c4e565b60208082528101610d0b81611c92565b60208082528101610d0b81611cd9565b60208082528101610d0b81611d27565b60208082528101610d0b81611d74565b60208082528101610d0b81611de5565b60208082528101610d0b81611e33565b60208082528101610d0b81611e80565b60208082528101610d0b81611ee9565b60208082528101610d0b81611f38565b60208082528101610d0b81611fb6565b60208082528101610d0b8161200d565b60208082528101610d0b8161206c565b60208082528101610d0b816120b8565b60208082528101610d0b81612107565b60208082528101610d0b81612158565b6040518181016001600160401b03811182821017156123f657600080fd5b604052919050565b60006001600160401b0382111561241457600080fd5b5060209081020190565b60006001600160401b0382111561243457600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610d0b82612472565b151590565b80610552816124ce565b6001600160a01b031690565b90565b6000610d0b82612468565b82818337506000910152565b60005b838110156124b357818101518382015260200161249b565b8381111561073b5750506000910152565b601f01601f191690565b60068110610d8857fe5b6124e181612458565b8114610d8857600080fd5b6124e181612463565b60068110610d8857600080fd5b6124e18161247e56fea264697066735822122039028b5af491b26024e0d524e00c89cbd9b50cf3473d360a21eb8ca9b122e0f464736f6c634300060c0033",
  "devdoc": {
    "author": "Enzyme Council <security@enzyme.finance>",
    "kind": "dev",
    "methods": {
      "activateForFund(bool)": {
        "details": "Caller is expected to be a valid ComptrollerProxy, but there isn't a need to validate.",
        "params": {
          "_isMigratedFund": "True if the fund is migrating to this release"
        }
      },
      "deregisterPolicies(address[])": {
        "params": {
          "_policies": "Addresses of policies to be registered"
        }
      },
      "disablePolicyForFund(address,address)": {
        "params": {
          "_comptrollerProxy": "The ComptrollerProxy of the fund",
          "_policy": "The policy address to disable"
        }
      },
      "enablePolicyForFund(address,address,bytes)": {
        "details": "Disabling a policy does not delete fund config on the policy, so if a policy is disabled and then enabled again, its initial state will be the previous config. It is the policy's job to determine how to merge that config with the _settingsData param in this function.",
        "params": {
          "_comptrollerProxy": "The ComptrollerProxy of the fund",
          "_policy": "The policy address to enable",
          "_settingsData": "The encoded settings data with which to configure the policy"
        }
      },
      "getEnabledPoliciesForFund(address)": {
        "params": {
          "_comptrollerProxy": "The ComptrollerProxy of the fund"
        },
        "returns": {
          "enabledPolicies_": "An array of enabled policy addresses"
        }
      },
      "getFundDeployer()": {
        "returns": {
          "fundDeployer_": "The `FUND_DEPLOYER` variable value"
        }
      },
      "getOwner()": {
        "details": "Ownership is deferred to the owner of the FundDeployer contract",
        "returns": {
          "owner_": "The owner"
        }
      },
      "getRegisteredPolicies()": {
        "returns": {
          "registeredPoliciesArray_": "A list of all registered policy addresses"
        }
      },
      "getVaultProxyForFund(address)": {
        "params": {
          "_comptrollerProxy": "The ComptrollerProxy of the fund"
        },
        "returns": {
          "vaultProxy_": "The VaultProxy of the fund"
        }
      },
      "policyImplementsHook(address,uint8)": {
        "params": {
          "_hook": "The PolicyHook to check",
          "_policy": "The address of the policy to check"
        },
        "returns": {
          "implementsHook_": "True if the policy implements the hook"
        }
      },
      "policyIsEnabledForFund(address,address)": {
        "params": {
          "_comptrollerProxy": "The ComptrollerProxy of the fund to check",
          "_policy": "The address of the policy to check"
        },
        "returns": {
          "isEnabled_": "True if the policy is enabled for the fund"
        }
      },
      "policyIsRegistered(address)": {
        "params": {
          "_policy": "The address of the policy to check"
        },
        "returns": {
          "isRegistered_": "True if the policy is registered"
        }
      },
      "receiveCallFromComptroller(address,uint256,bytes)": {
        "details": "Unimplemented by default, may be overridden."
      },
      "registerPolicies(address[])": {
        "params": {
          "_policies": "Addresses of policies to be registered"
        }
      },
      "setConfigForFund(bytes)": {
        "details": "Only called during init() on ComptrollerProxy deployment",
        "params": {
          "_configData": "Encoded config data"
        }
      },
      "updatePolicySettingsForFund(address,address,bytes)": {
        "params": {
          "_comptrollerProxy": "The ComptrollerProxy of the fund",
          "_policy": "The Policy contract to update",
          "_settingsData": "The encoded settings data with which to update the policy config"
        }
      },
      "validatePolicies(address,uint8,bytes)": {
        "params": {
          "_comptrollerProxy": "The ComptrollerProxy of the fund",
          "_hook": "The PolicyHook for which to validate policies",
          "_validationData": "The encoded data with which to validate the filtered policies"
        }
      }
    },
    "title": "PolicyManager Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "activateForFund(bool)": {
        "notice": "Validates and initializes policies as necessary prior to fund activation"
      },
      "deactivateForFund()": {
        "notice": "Deactivates policies for a fund by destroying storage"
      },
      "deregisterPolicies(address[])": {
        "notice": "Remove policies from the list of registered policies"
      },
      "disablePolicyForFund(address,address)": {
        "notice": "Disables a policy for a fund"
      },
      "enablePolicyForFund(address,address,bytes)": {
        "notice": "Enables a policy for a fund"
      },
      "getEnabledPoliciesForFund(address)": {
        "notice": "Get a list of enabled policies for a given fund"
      },
      "getFundDeployer()": {
        "notice": "Gets the `FUND_DEPLOYER` variable"
      },
      "getOwner()": {
        "notice": "Gets the owner of this contract"
      },
      "getRegisteredPolicies()": {
        "notice": "Get all registered policies"
      },
      "getVaultProxyForFund(address)": {
        "notice": "Gets the verified VaultProxy for a given ComptrollerProxy"
      },
      "policyImplementsHook(address,uint8)": {
        "notice": "Checks if a policy implements a particular hook"
      },
      "policyIsEnabledForFund(address,address)": {
        "notice": "Check if a policy is enabled for the fund"
      },
      "policyIsRegistered(address)": {
        "notice": "Check whether a policy is registered"
      },
      "receiveCallFromComptroller(address,uint256,bytes)": {
        "notice": "Receives calls from ComptrollerLib.callOnExtension() and dispatches the appropriate action"
      },
      "registerPolicies(address[])": {
        "notice": "Add policies to the list of registered policies"
      },
      "setConfigForFund(bytes)": {
        "notice": "Enable policies for use in a fund"
      },
      "updatePolicySettingsForFund(address,address,bytes)": {
        "notice": "Updates policy settings for a fund"
      },
      "validatePolicies(address,uint8,bytes)": {
        "notice": "Validates all policies that apply to a given hook for a fund"
      }
    },
    "notice": "Manages policies for funds",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 37610,
        "contract": "contracts/release/extensions/policy-manager/PolicyManager.sol:PolicyManager",
        "label": "comptrollerProxyToVaultProxy",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 34394,
        "contract": "contracts/release/extensions/policy-manager/PolicyManager.sol:PolicyManager",
        "label": "registeredPolicies",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(AddressSet)2091_storage"
      },
      {
        "astId": 34400,
        "contract": "contracts/release/extensions/policy-manager/PolicyManager.sol:PolicyManager",
        "label": "policyToHookToIsImplemented",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_enum(PolicyHook)34334,t_bool))"
      },
      {
        "astId": 34404,
        "contract": "contracts/release/extensions/policy-manager/PolicyManager.sol:PolicyManager",
        "label": "comptrollerProxyToPolicies",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(AddressSet)2091_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(PolicyHook)34334": {
        "encoding": "inplace",
        "label": "enum IPolicyManager.PolicyHook",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_enum(PolicyHook)34334,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(enum IPolicyManager.PolicyHook => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_enum(PolicyHook)34334,t_bool)"
      },
      "t_mapping(t_address,t_struct(AddressSet)2091_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EnumerableSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)2091_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_enum(PolicyHook)34334,t_bool)": {
        "encoding": "mapping",
        "key": "t_enum(PolicyHook)34334",
        "label": "mapping(enum IPolicyManager.PolicyHook => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(AddressSet)2091_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 2090,
            "contract": "contracts/release/extensions/policy-manager/PolicyManager.sol:PolicyManager",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)1826_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)1826_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 1821,
            "contract": "contracts/release/extensions/policy-manager/PolicyManager.sol:PolicyManager",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 1825,
            "contract": "contracts/release/extensions/policy-manager/PolicyManager.sol:PolicyManager",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}